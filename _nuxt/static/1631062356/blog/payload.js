__NUXT_JSONP__("/blog", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW,bX,bY,bZ,b_,b$,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,cA,cB,cC,cD,cE,cF,cG,cH,cI,cJ,cK,cL,cM,cN,cO,cP,cQ,cR,cS,cT,cU,cV,cW,cX,cY,cZ,c_,c$,da,db,dc,dd,de,df,dg,dh,di,dj,dk,dl,dm,dn,do0,dp,dq,dr,ds,dt,du,dv,dw,dx,dy,dz,dA,dB,dC,dD,dE,dF,dG,dH,dI,dJ,dK,dL,dM,dN,dO,dP,dQ,dR,dS,dT,dU,dV,dW,dX,dY,dZ,d_,d$,ea,eb,ec,ed,ee,ef,eg,eh,ei,ej,ek,el,em,en,eo,ep,eq,er,es,et,eu,ev,ew,ex,ey,ez,eA,eB,eC,eD,eE,eF,eG,eH,eI,eJ,eK,eL,eM,eN,eO,eP,eQ,eR,eS,eT,eU,eV,eW,eX,eY,eZ,e_,e$,fa,fb,fc,fd,fe,ff,fg,fh,fi,fj,fk,fl,fm,fn,fo,fp,fq,fr,fs,ft,fu,fv,fw,fx,fy,fz,fA,fB,fC,fD,fE,fF,fG,fH,fI,fJ,fK,fL,fM,fN,fO,fP,fQ,fR,fS,fT,fU,fV,fW,fX,fY,fZ,f_,f$,ga,gb,gc,gd,ge,gf,gg,gh,gi,gj,gk,gl,gm,gn,go,gp,gq,gr,gs,gt,gu,gv,gw,gx,gy,gz,gA,gB,gC,gD,gE,gF,gG,gH,gI,gJ,gK,gL,gM,gN,gO,gP,gQ,gR,gS,gT,gU,gV,gW,gX,gY,gZ){return {data:[{articles:[{slug:"monorepo-dependencies-yarn-workspaces-lerna",description:"Configuring my monorepo for easier development with Yarn Workspaces and Lerna",title:"Managing Monorepo Dependencies with Yarn Workspaces and Lerna",authors:[af],date:"2021-09-06T20:36:44.000Z",categories:[aX],series:[a$],tags:["Yarn","Monorepo",dA],toc:[{id:dB,depth:$,text:dC}],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:a,value:dD},{type:b,tag:bW,props:{to:dE},children:[{type:a,value:"my last post"}]},{type:a,value:", I talked about taking my three TNT projects - those being the core Vue package, plus a version packaged for Vue CLI and one for Nuxt.js - and creating, from them, a monorepo to house all three. This, I said, would make development a lot easier. It does. A caveat I didn't mention is that it could make dependency relationships harder to manage... which it, err... does, sort of. In some respects, dependencies are easy to manage between the three projects, and in other respects it is a little more difficult to have the three communicate with one another. But not to worry; that's where tools like "},{type:b,tag:o,props:{href:"https:\u002F\u002Fclassic.yarnpkg.com\u002Fen\u002Fdocs\u002Fworkspaces\u002F",rel:[D,E,F],target:G},children:[{type:a,value:"Yarn Workspaces"}]},{type:a,value:aP},{type:b,tag:o,props:{href:"https:\u002F\u002Fgithub.com\u002Flerna\u002Flerna",rel:[D,E,F],target:G},children:[{type:a,value:dA}]},{type:a,value:" come in. The first of these, Yarn Workspaces, is a way to share dependencies between the three projects as well as having each one depend on the others during development. The second, Lerna, does that same thing as well in a different way, but on top of that it also offers some version management and publishing tools."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So, what's the benefit and what's the difference? Well, the main feature of both Yarn Workspaces and Lerna is multi-package dependency management. With Yarn Workspaces active, for instance, one only has to run "},{type:b,tag:h,props:{},children:[{type:a,value:cM}]},{type:a,value:" from the base directory and Yarn will iterate through all of the packages and install all of their dependencies. It installs all dependencies in the project root as well, so that the packages all share their common dependencies, significantly lowering the install time and size. And it symlinks the other packages in the workspace, so that the local, development version of each package is used in development. All of this, Lerna does as well but slightly differently. And Lerna adds the capability to run scripts across all packages, manage semantic versioning across them all, and publish all of them to the NPM registry with a single command. So then... if Lerna does the same and more, why have I chosen to use both?"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Good question. I actually did experiment with using Lerna alone, but it doesn't play nicely with Yarn's package management which I was already using. It's also had a series of developments that seem to have outpaced documentation - that is to say, it isn't poorly documented, but the documentation is somewhat incomplete and in need of some clarification. Aside from this, Yarn Workspaces is a native solution which is typically something you can depend on. It just isn't as feature rich as Lerna, so... we're lucky that Lerna has this under consideration and can be configured to work with Yarn Workspaces instead of its own dependency management solution. The resultant setup is something I absolutely adore, and am sure to use again in the future. Let's examine it..."}]},{type:a,value:f},{type:b,tag:S,props:{id:dB},children:[{type:b,tag:o,props:{href:"#the-setup",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:dC}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The only "},{type:b,tag:h,props:{},children:[{type:a,value:bf}]},{type:a,value:" configuration required to work with Yarn Workspaces is... "},{type:b,tag:q,props:{},children:[{type:a,value:"well, actually, it's this:"}]}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,cm]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:dF}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:dG}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"That's an absolute minimum. The "},{type:b,tag:h,props:{},children:[{type:a,value:"packages\u002F*"}]},{type:a,value:" glob pattern can be anything; this one just says, treat every folder inside of the packages directory as a separate package. "},{type:b,tag:q,props:{},children:[{type:a,value:"NOTE: Yes, I've also moved my project folders yet again into a "},{type:b,tag:h,props:{},children:[{type:a,value:dH}]},{type:a,value:" directory - it's a good pattern."}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Yarn Workspaces also used to require that the root package be marked private with "},{type:b,tag:h,props:{},children:[{type:a,value:"\"private\": true"}]},{type:a,value:". In fact, later docs don't suggest that this is at all deprecated, just that they've removed the requirement to make migrating to this approach a little easier for package developers. In other words, it is still best practise."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"With that in mind, I moved my various packages into the "},{type:b,tag:h,props:{},children:[{type:a,value:dH}]},{type:a,value:" directory, and I added the following to a root "},{type:b,tag:h,props:{},children:[{type:a,value:bf}]},{type:a,value:j}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,cm]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:"\"private\""}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bG]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:dF}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:dG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"docs\""}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"You can see I've also added "},{type:b,tag:h,props:{},children:[{type:a,value:"docs"}]},{type:a,value:" to the workspaces patterns; I decided to keep the documentation website separate, as it isn't strictly one of the packages I'm aiming to publish."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"With that done, using Yarn Workspaces is as easy as running "},{type:b,tag:h,props:{},children:[{type:a,value:cM}]},{type:a,value:". Dependencies are then installed in the root directory and the packages depending on each other get symlinked. Easy peasy!"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Next, I installed Lerna..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn add lerna --dev\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"...and added a basic "},{type:b,tag:h,props:{},children:[{type:a,value:dI}]},{type:a,value:" configuration file:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,cm]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:"\"version\""}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"0.1.0\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:"\"npmClient\""}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"yarn\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:"\"useWorkspaces\""}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bG]},children:[{type:a,value:Q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Typically, the "},{type:b,tag:h,props:{},children:[{type:a,value:dI}]},{type:a,value:" file would have a "},{type:b,tag:h,props:{},children:[{type:a,value:"packages"}]},{type:a,value:" value containing a similar list of globs to the one in "},{type:b,tag:h,props:{},children:[{type:a,value:dJ}]},{type:a,value:" above. Since we're telling it that our "},{type:b,tag:h,props:{},children:[{type:a,value:"npmClient"}]},{type:a,value:dK},{type:b,tag:h,props:{},children:[{type:a,value:"yarn"}]},{type:a,value:" though, and that we want to "},{type:b,tag:h,props:{},children:[{type:a,value:dL}]},{type:a,value:", we can omit the packages value. Because "},{type:b,tag:h,props:{},children:[{type:a,value:dL}]},{type:a,value:dK},{type:b,tag:h,props:{},children:[{type:a,value:Q}]},{type:a,value:", Lerna will instead use the "},{type:b,tag:h,props:{},children:[{type:a,value:dJ}]},{type:a,value:" array in our main "},{type:b,tag:h,props:{},children:[{type:a,value:bf}]},{type:a,value:v}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"And... Oh wow, that's really all it takes."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So I can now run commands like "},{type:b,tag:h,props:{},children:[{type:a,value:"lerna run build"}]},{type:a,value:" to run the "},{type:b,tag:h,props:{},children:[{type:a,value:dM}]},{type:a,value:" command in all packages that have that command, and "},{type:b,tag:h,props:{},children:[{type:a,value:"lerna publish"}]},{type:a,value:" them all in one go and increment their versions. Monorepo management on autopilot!"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"In fact, I love this setup so much I've already started wondering if it's possible to adopt for some of my other projects. I'm sure it is. Either way, I'm gonna be adopting this structure a lot going forwards."}]}]},dir:ah,path:"\u002Fblog\u002Fmonorepo-dependencies-yarn-workspaces-lerna",extension:ai,createdAt:O,updatedAt:O},{slug:"tnt-monorepo",description:"Combining the files and histories of three separate Git repositories",title:"Creating a Monorepo for my TNT Packages",authors:[af],date:"2021-09-04T02:20:17.000Z",categories:[aX],series:[a$],tags:["Git",bg,"Vue CLI",ba,aq],toc:[],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:a,value:"Recently, I "},{type:b,tag:bW,props:{to:"\u002Fseries\u002Freworking-tnt"},children:[{type:a,value:"reworked TNT"}]},{type:a,value:". TNT was a Nuxt module that provided a set of common dependencies and components that I use frequently across my Nuxt projects. Now, it's a Vue plugin that does the same for Vue projects that do not use Nuxt. And it's also a Vue CLI plugin, which just makes installing it a lot easier. In fact, these three things - the Nuxt module, the Vue plugin and the Vue CLI plugin - now live in three separate repositories... but they share a lot of DNA, naturally. Both the Nuxt module and the CLI plugin require TNT as a dependency. And the TNT docs, which live in the main repository, in turn require Nuxt TNT... It's "},{type:b,tag:q,props:{},children:[{type:a,value:cn}]},{type:a,value:" a circular dependency. "},{type:b,tag:q,props:{},children:[{type:a,value:"Almost."}]},{type:a,value:" Strictly the docs site is a distinct project from the main TNT one, they just live alongside one another. They didn't have to live together - that's a decision I made so that the TNT docs would live at a nice looking GitHub Pages URL... It was a vanity. But it has other benefits, we're just not yet making full utilisation of them because of the aforementioned "},{type:b,tag:q,props:{},children:[{type:a,value:cn}]},{type:a,value:" circular dependency. The docs don't directly depend on the main code, they depend on Nuxt TNT which depends on the main code in turn. So... what if I moved Nuxt TNT (and the CLI plugin) into this same repository? Then I wouldn't have to worry about this project depending on that one, which in turn depends on the first one... The "},{type:b,tag:q,props:{},children:[{type:a,value:cn}]},{type:a,value:" circular dependency would instead refer to projects in the same project tree. The "},{type:b,tag:q,props:{},children:[{type:a,value:cn}]},{type:a,value:" circle is still there, but it's neatly hidden in a branching directory structure. My code could make use of the latest changes to other projects in the directory tree, common processes could be run from the parent folder of all three, and I should no longer need to worry about bouncing back and forth between projects to "},{type:b,tag:h,props:{},children:[{type:a,value:"yarn upgrade"}]},{type:a,value:" in an "},{type:b,tag:q,props:{},children:[{type:a,value:"ALMOST"}]},{type:a,value:" circular loop to update these dependencies."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"This is what's known as a "},{type:b,tag:q,props:{},children:[{type:a,value:"monorepo"}]},{type:a,value:", a singular repository housing the source code for multiple projects that share... something in common. What they share in common isn't always as cut-and-dry as my use case; for example, the repository for Ruby on Rails houses the source code for a lot of its own dependencies like Action Pack and Active Record that could, "},{type:b,tag:q,props:{},children:[{type:a,value:"strictly"}]},{type:a,value:" work independently. Vue CLI and Nuxt TNT do not work independently; it's sort of the inverse of the Rails project. Rather than Rails depending on all of these independent parts, TNT has these independent parts which depend on it."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The reason that monorepos have surged in popularity, I think, is because it makes development a lot easier. When you have these projects which depend on one another in whatever direction, and you have a team managing the development of all of them, it helps to have that all in one place. That way if an issue is identified with one project, but it's discovered that it originates somewhere else in the stack, it is trivial to address and push the common changes together."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"There are tradeoffs, of course... One small example pertaining to open source development: someone may want to fork only Nuxt TNT and make a change to one part of that for their own purposes, but now they need to fork a monorepo and... figure out how their project includes a dependency coming from that form of architecture. So monorepos can be unfriendly. It's possible we'll address this a ways down the line by making each subdirectory a Git Submodule... but this is unfriendly in its own sort of way. We just aren't going to worry about that just yet."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"For the time being, we just want to bring together TNT, Vue CLI TNT and Nuxt TNT in to one repository so that they can share code, share development, share common build tasks. And err..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"There's an easy way to do that. We just copy the files and directories from each project into their desired locations in the main project. Easy peasy..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"...but we lose each project's respective Git history that way. Preferably we would be... merging the three projects into one, revision history included. So let's figure out how to do that instead, shall we?"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Ultimately, we want the resultant project to live in the same place that the core TNT library currently does (that's "},{type:b,tag:o,props:{href:co,rel:[D,E,F],target:G},children:[{type:a,value:co}]},{type:a,value:"), and we want it to incorporate that core library as well as Nuxt TNT and Vue CLI Plugin TNT, each in three separate directories."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"In other words, the base directory - "},{type:b,tag:h,props:{},children:[{type:a,value:au}]},{type:a,value:" - is a sort of brand new space housing all three. And the three of them have their own directories - "},{type:b,tag:h,props:{},children:[{type:a,value:dN}]},{type:a,value:bh},{type:b,tag:h,props:{},children:[{type:a,value:"\u002Fnuxt"}]},{type:a,value:bh},{type:b,tag:h,props:{},children:[{type:a,value:"\u002Fcli"}]},{type:a,value:" - somehow having preserved their respective histories from the Git repositories that currently house them..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Sounds... complicated enough."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"We'll start by creating a clean project to house the three existing ones..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[J,n]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"mkdir tnt-monorepo\ncd tnt-monorepo\ngit init\ntouch .monorepo\ngit add .\ngit commit -m \"Initial commit\"\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"We also need something to be committed initially, hence the "},{type:b,tag:h,props:{},children:[{type:a,value:"touch .monorepo"}]},{type:a,value:" command. This creates an empty file for me to commit - it can be anything, but it mustn't have a name conflict with any of the files we'll be merging, so I've just called it "},{type:b,tag:h,props:{},children:[{type:a,value:".monorepo"}]},{type:a,value:v}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Now we can do our first project merge..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[J,n]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"git remote add -f tnt https:\u002F\u002Fgithub.com\u002Fthombruce\u002Ftnt.git\ngit merge -s ours --no-commit tnt\u002Fmain --allow-unrelated-histories\ngit read-tree --prefix=tnt\u002F -u tnt\u002Fmain\ngit commit -m \"Merge TNT Core\"\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"...and that's the full merge. TNT's history is preserved and now lives in a "},{type:b,tag:h,props:{},children:[{type:a,value:dN}]},{type:a,value:" folder in this new Git repository. There's a little to explain here, so we'll go through it step by step."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[J,n]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"git remote add -f tnt https:\u002F\u002Fgithub.com\u002Fthombruce\u002Ftnt.git\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"This adds the existing GitHub repository for TNT as a remote repository for this one. A remote is essentially... some other Git repository we want to communicate with; typically it is a remote copy of the one we're actually working on, and it is often called 'origin'. In this case it's another repository entirely. We add the "},{type:b,tag:h,props:{},children:[{type:a,value:"-f"}]},{type:a,value:" flag to tell it to fetch the Git history immediately, but we don't actually make any alterations to the state of our new monorepo at this point."}]}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[J,n]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"git merge -s ours --no-commit tnt\u002Fmain --allow-unrelated-histories\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"This is the command that actually merges the other repository's main branch. Often "},{type:b,tag:h,props:{},children:[{type:a,value:"merge"}]},{type:a,value:" is used to... merge branches, and this is no different. The "},{type:b,tag:h,props:{},children:[{type:a,value:"-s ours"}]},{type:a,value:" flag tells it to resolve conflicts by favouring the monorepo's files (this is \"our\" project). "},{type:b,tag:h,props:{},children:[{type:a,value:"--no-commit"}]},{type:a,value:" halts the merge process before committing it, because these files are otherwise going to be merged into the root directory. And "},{type:b,tag:h,props:{},children:[{type:a,value:"--allow-unrelated-histories"}]},{type:a,value:" is important to address the fact that our repository and TNT's have very different Git histories; Git typically disallows this merge for our own safety, but we have the option to override that. Next..."}]}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[J,n]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"git read-tree --prefix=tnt\u002F -u tnt\u002Fmain\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"This command reads the contents of the tree at "},{type:b,tag:h,props:{},children:[{type:a,value:dO}]},{type:a,value:", doing so under the given prefix and, with the "},{type:b,tag:h,props:{},children:[{type:a,value:"-u"}]},{type:a,value:" flag, updates the working tree with those contents. In other words... it moves the contents of the origin and branch at "},{type:b,tag:h,props:{},children:[{type:a,value:dO}]},{type:a,value:" into our new "},{type:b,tag:h,props:{},children:[{type:a,value:"tnt\u002F"}]},{type:a,value:" directory."}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"And finally, we complete the merge and give it a commit message:"}]}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[J,n]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"git commit -m \"Merge TNT Core\"\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Got it? ... Good, because I'm not sure I do. But it works!"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Now we just repeat the process for the other two repositories..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[J,n]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"git remote add -f cli https:\u002F\u002Fgithub.com\u002Fthombruce\u002Fvue-cli-plugin-tnt.git\ngit merge -s ours --no-commit cli\u002Fmain --allow-unrelated-histories\ngit read-tree --prefix=cli\u002F -u cli\u002Fmain\ngit commit -m \"Merge TNT CLI\"\n\ngit remote add -f nuxt https:\u002F\u002Fgithub.com\u002Fthombruce\u002Fnuxt-tnt.git\ngit merge -s ours --no-commit nuxt\u002Fmain --allow-unrelated-histories\ngit read-tree --prefix=nuxt\u002F -u nuxt\u002Fmain\ngit commit -m \"Merge Nuxt TNT\"\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"...and just like that, we have our full monorepo. Oh, and we can delete that initial file now..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[J,n]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"git rm .monorepo\ngit commit -m \"Cleanup: Delete .monorepo file\"\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Now my monorepo only houses those three directories and their project files. And I can be confident that the three projects still work independently, since nothing has fundamentally changed here. They'll each need "},{type:b,tag:h,props:{},children:[{type:a,value:cM}]},{type:a,value:" to be ran, but they'll work. It's a working monorepo, and I believe this will let me better manage development of the whole TNT project going forwards."}]}]},dir:ah,path:dE,extension:ai,createdAt:O,updatedAt:O},{slug:"reworking-tnt-bundling",description:"Using Vue CLI to bundle my Vue plugin as a JavaScript module",title:"Reworking TNT: Addendum - Bundling the Plugin",authors:[af],date:"2021-09-02T22:48:00.000Z",categories:[aX],series:[a$,bH],tags:[bg,ba,aq,bI],toc:[],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:a,value:"So, in "},{type:b,tag:o,props:{href:dP},children:[{type:a,value:dQ}]},{type:a,value:" in this series I said..."}]},{type:a,value:f},{type:b,tag:dR,props:{},children:[{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:dS}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"...and I drew a line under this series of posts. I said "},{type:b,tag:q,props:{},children:[{type:a,value:"hey"}]},{type:a,value:", y'know, "},{type:b,tag:q,props:{},children:[{type:a,value:"I'm done here"}]},{type:a,value:". Developers should never be hubristic... no matter how trivial the hubris."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The problem:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,"language-txt"]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"Syntax Error\nCannot use import statement outside a module\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"To be fair, it worked at the time of my writing that last post. I've since made some changes to try and integrate the new Nuxt-free TNT plugin with the existing Nuxt plugin a little better. Specifically, the failing import is the import of the plugin itself. As of writing my last post, I was benefiting from the installation of dependencies from the one package, but I wasn't actually importing the main part of the plugin itself - I was still largely depending on the Nuxt code, some of which is just duplications of the Vue code now. Naturally, I wanted to trade that out and so... now it's broken. At least, the Nuxt TNT module is broken. The plugin still does work... just not inside of the Nuxt environment. Why? Well... That's complicated."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Y'see, there's more than one way to handle an "},{type:b,tag:h,props:{},children:[{type:a,value:ad}]},{type:a,value:" statement in JavaScript. There are essentially what I am going to call "},{type:b,tag:q,props:{},children:[{type:a,value:"different flavours"}]},{type:a,value:". And there are a few of them, but I want to address just two in particular: CommonJS and ES6 Modules. And I'm... not actually concerned about the differences between the two. One pre-parses and resolves sub-dependencies (ES6), the other loads and executes in order (CommonJS). This doesn't actually concern me. This may not actually be my problem, in fact. I just raise it because I... "},{type:b,tag:q,props:{},children:[{type:a,value:"could"}]},{type:a,value:" theoretically resolve the issue personally by installing one or the other, and configuring it a certain way in my own projects and "},{type:b,tag:q,props:{},children:[{type:a,value:"hey presto"}]},{type:a,value:", that should work. But that's working around the problem, avoiding the meat of it, and if others try to use my plugins and encounter the same thing, then I need to tell them to use this nasty workaround instead of my actually fixing the issue. It's just not the proper way to do things."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So... how should I actually solve this? Well, by actually bundling the plugins properly... or at least... I assume that will work."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"See, an NPM module can be bundled into separate syntaxes, each a different version of the code with slight variations for different environments and saved to files with different extensions. For instance, Vue itself comes in a standard flavour at "},{type:b,tag:h,props:{},children:[{type:a,value:"vue.js"}]},{type:a,value:" and an ES module flavour at "},{type:b,tag:h,props:{},children:[{type:a,value:"vue.esm.js"}]},{type:a,value:" - I've ran into this little difference on more than one occasion. Essentially, we want to do that. But does that mean rewriting the code twice..? Of course not. The code as it stands is functional, and doesn't need to be changed. It just needs to be interpreted by a bundling tool, with different versions spit out for these different environments. And I think the way we're going to do that is..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"...by using our new friend, Vue CLI. This is going to be the easiest approach initially, though not necessarily the best. Even Vue CLI's own docs recommend a different tool for bundling plugins, "},{type:b,tag:o,props:{href:"https:\u002F\u002Frollupjs.org\u002Fguide\u002Fen\u002F",rel:[D,E,F],target:G},children:[{type:a,value:"Rollup"}]},{type:a,value:". As I'm not familiar with that tool, I want to leave it a consideration for the future. It does apparently result in smaller bundle sizes, which is great, but this isn't my main concern right now. My main concern is bundling a module at all. When I do swap out for Rollup in the future, I believe it will be easier to do so if we already have the target behaviour implemented - that way we have an exact goal to aim for."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Unfortunately, Vue CLI isn't installed in my main TNT project just yet, so I'll have to add the dependencies manually:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn add core-js vue\nyarn add --dev @vue\u002Fcli-plugin-babel @vue\u002Fcli-plugin-eslint @vue\u002Fcli-service babel-eslint eslint eslint-plugin-vue vue-template-compiler\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I've also copied across the ESLint and Babel configs from a freshly created Vue CLI app. More important though are the changes I'm about to make to "},{type:b,tag:h,props:{},children:[{type:a,value:bf}]},{type:a,value:bX}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I change the location pointed to by the "},{type:b,tag:h,props:{},children:[{type:a,value:"main"}]},{type:a,value:" option and add a new "},{type:b,tag:h,props:{},children:[{type:a,value:dM}]},{type:a,value:" command to the "},{type:b,tag:h,props:{},children:[{type:a,value:"scripts"}]},{type:a,value:" object:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"main\""}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"dist\u002Ftnt.common.js\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:dT}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:dU}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"vue-cli-service build --target lib --name tnt .\u002Fsrc\u002Findex.js\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Then I can run:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn build\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"...and Vue CLI spits out a set of files including "},{type:b,tag:h,props:{},children:[{type:a,value:"tnt.umd.js"}]},{type:a,value:" to a newly created "},{type:b,tag:h,props:{},children:[{type:a,value:bY}]},{type:a,value:" folder."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"And that's it! ... Or should be, at least. I need to now go away and test this out, see if I can "},{type:b,tag:h,props:{},children:[{type:a,value:ad}]},{type:a,value:" everything correctly."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Ugh... Yup. Yup, I can. I just have a whole new problem now."}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So, that worked but it looks like I now have some kind of conflict between Nuxt's use of Vue Meta and the version of Vue Meta that I invoke for Vue projects. Not a problem..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"We'll just conditionally invoke Vue Meta based on whether or not the project is running Nuxt. I won't bother thinking about how to check for that implicitly just now; instead I'll just look for a truthy "},{type:b,tag:h,props:{},children:[{type:a,value:bZ}]},{type:a,value:" option in the options object:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aH]},children:[{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:aY}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:av}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:b_}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,ax]},children:[{type:a,value:bb}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:bw}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:bx}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:cp}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,bi]},children:[{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:bJ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,ax]},children:[{type:a,value:bb}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,A,cN]},children:[{type:a,value:cO}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:dV}]},{type:a,value:dW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:bZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:aY}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,ax]},children:[{type:a,value:bb}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"...and then when invoking TNT in a Nuxt project (in this case the Nuxt TNT package), we'll just set that option explicitly:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aH]},children:[{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:ar}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:av}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:cq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bj]},children:[{type:a,value:aq}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:av}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:b$}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,bj]},children:[{type:a,value:aq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:" nuxt"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bG]},children:[{type:a,value:Q}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Nice and simple, not something end users will need to worry about. Something I might do to make this a little more general purpose and configurable in the future is to swap this boolean "},{type:b,tag:h,props:{},children:[{type:a,value:bZ}]},{type:a,value:" option out for an object of some sort that can pick and choose features from the plugin. But this is quick and easy, and good enough for now."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"All right then... Worked myself into a little bit of a confused state here by working on a couple of projects at once, but I think I'm ready to commit. Some cleaning up to do, but other than that..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"...commit and push my TNT changes, "},{type:b,tag:h,props:{},children:[{type:a,value:cP}]},{type:a,value:" from my Nuxt TNT project. And then gradually upgrade the packages wherever I use them."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"With that done, the next step really is publishing these and making sensible use of semantic versioning. But that for now is a task I leave unwritten. End of chapter."}]}]},dir:ah,path:"\u002Fblog\u002Freworking-tnt-bundling",extension:ai,createdAt:O,updatedAt:O},{slug:dP,description:"Installing dependencies, loaders and configurations with a Vue CLI Plugin",title:"Reworking TNT: Creating a Vue CLI Plugin",authors:[af],date:"2021-08-31T04:58:30.000Z",categories:[aX],series:[a$,bH],tags:[bg,ba,aq,bI],toc:[{id:dX,depth:$,text:dY},{id:dZ,depth:$,text:d_},{id:d$,depth:$,text:ea}],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:b,tag:o,props:{href:eb},children:[{type:a,value:"In my previous post"}]},{type:a,value:" we tried to figure out how TNT could be installed with all those dependencies I love and use often (e.g. Pug, PostCSS, Tailwind) as part of a Webpack bundle while not strictly confining end-users to the use of Webpack. That is, it should be usable with different bundlers like Vite and Gulp as well. In doing so, we created a minimal Webpack installation and examined the parts that make my dependencies and the TNT package work. We were trying to avoid making it specific to Webpack, to avoid also making it depend upon Vue CLI, so that it could have broader use. And yet, we learned how a Vue CLI plugin communicates its intentions to bundle a Webpack package by examining the Pug Vue CLI plugin, and we discovered that this is simple, straightforward and perhaps elegant. In other words, we have taken the long way around trying to avoid creating a Vue CLI plugin in order to ultimately that that is precisely what we actually want to do. Still, it has been informative and the lessons learned can be used to document the installation of TNT without Vue CLI too."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"In this post, I finally intend to finish this project by making a Vue CLI plugin for TNT that communicates its dependencies and the essential Webpack configuration that will make it work just a single line of code. By the end of this article, TNT should hopefully be as easy to install as..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"vue add tnt\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Let's get to it..."}]},{type:a,value:f},{type:b,tag:ca,props:{},children:[]},{type:a,value:f},{type:b,tag:S,props:{id:dX},children:[{type:b,tag:o,props:{href:"#initialising-the-plugin",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:dY}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So, we have a goal in sight - "},{type:b,tag:h,props:{},children:[{type:a,value:ec}]},{type:a,value:" - and we have one example of how that can be achieved - "},{type:b,tag:o,props:{href:cr,rel:[D,E,F],target:G},children:[{type:a,value:cr}]},{type:a,value:" - now we just need to get there. We'll start by looking at the docs for creating a Vue CLI plugin like that one..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Vue have a plugin development guide for Vue CLI plugins here: "},{type:b,tag:o,props:{href:ed,rel:[D,E,F],target:G},children:[{type:a,value:ed}]},{type:a,value:" I caught a glimpse of this the other day, and I'm particularly interested in something that caught my attention then: discoverability. Their section on "},{type:b,tag:o,props:{href:"https:\u002F\u002Fcli.vuejs.org\u002Fdev-guide\u002Fplugin-dev.html#naming-and-discoverability",rel:[D,E,F],target:G},children:[{type:a,value:"Naming and discoverability"}]},{type:a,value:" insists upon a naming strategy matching the form "},{type:b,tag:h,props:{},children:[{type:a,value:"vue-cli-plugin-\u003Cname\u003E"}]},{type:a,value:bK},{type:b,tag:h,props:{},children:[{type:a,value:"@scope\u002Fvue-cli-plugin-\u003Cname\u003E"}]},{type:a,value:". We know the "},{type:b,tag:h,props:{},children:[{type:a,value:"\u003Cname\u003E"}]},{type:a,value:" is going to be 'tnt', but what about the "},{type:b,tag:h,props:{},children:[{type:a,value:"@scope"}]},{type:a,value:"? The typical scope I've used is my own name - e.g. "},{type:b,tag:h,props:{},children:[{type:a,value:cQ}]},{type:a,value:". I could continue to follow that pattern or make a change in this particular case... My question is: How does Vue CLI handle conflicting names? Answer... Found here: "},{type:b,tag:o,props:{href:ee,rel:[D,E,F],target:G},children:[{type:a,value:ee}]},{type:a,value:" Elsewhere in the docs, the guide makes clear the difference:"}]},{type:a,value:f},{type:b,tag:dR,props:{},children:[{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"You can also use 3rd party plugins under a specific scope. For example, if a plugin is named @foo\u002Fvue-cli-plugin-bar, you can add it with: "},{type:b,tag:h,props:{},children:[{type:a,value:"vue add @foo\u002Fbar"}]}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So it's my choice, then. Do we want "},{type:b,tag:h,props:{},children:[{type:a,value:ec}]},{type:a,value:bK},{type:b,tag:h,props:{},children:[{type:a,value:"vue add @thombruce\u002Ftnt"}]},{type:a,value:"? I'm gonna opt for scoped for the time being. Part of the reason that my other packages are scoped is... 'tnt' as the name of an NPM package was already taken by a package published 8 years ago and never updated. I'm happy with scoped, but I may change things up later. Let's create the package..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"mkdir vue-cli-plugin-tnt\ncd vue-cli-plugin-tnt\ngit init\nyarn init\n# name: @thombruce\u002Fvue-cli-plugin-tnt\n# version: 0.1.0\n# description: vue-cli plugin to add TNT with Pug, Tailwind and DaisyUI\n# entry point: index.js\n# repository url: https:\u002F\u002Fgithub.com\u002Fthombruce\u002Fvue-cli-plugin-tnt\n# author: Thom Bruce\n# license: MIT\n# private: false\ntouch index.js\ntouch README.md\ntouch .gitignore\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"We'll leave "},{type:b,tag:h,props:{},children:[{type:a,value:cR}]},{type:a,value:" empty for just the moment, but I'm adding a little title and description to "},{type:b,tag:h,props:{},children:[{type:a,value:"README.md"}]},{type:a,value:". I've also copied across the contents of a boilerplate "},{type:b,tag:h,props:{},children:[{type:a,value:ef}]},{type:a,value:" that's good for general purposes. And then..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"git add . && git commit -m \"Initial commit\"\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I've also created the repository on GitHub and will push my initial commit now..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"git remote add origin https:\u002F\u002Fgithub.com\u002Fthombruce\u002Fvue-cli-plugin-tnt.git\ngit push -u origin main\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The project now exists at "},{type:b,tag:o,props:{href:eg,rel:[D,E,F],target:G},children:[{type:a,value:eg}]},{type:a,value:". At present it lists none of the required dependencies, and it provides no instructions for initialising TNT. So that's our next step."}]},{type:a,value:f},{type:b,tag:S,props:{id:dZ},children:[{type:b,tag:o,props:{href:"#install-dependencies",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:d_}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Let's go over the dependencies we installed last time..."}]},{type:a,value:f},{type:b,tag:as,props:{},children:[{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"webpack"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"webpack-cli"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"webpack-dev-server"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"vue-loader"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"vue-template-compiler"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"style-loader"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"css-loader"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"postcss-loader"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"html-webpack-plugin"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:eh}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Interesting list. All of these are in fact already a given, with the exception of "},{type:b,tag:h,props:{},children:[{type:a,value:eh}]},{type:a,value:". Webpack will already be installed, as will Vue and the style and CSS loaders, even the PostCSS loader is one we can take for granted."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Meanwhile, TNT itself lists the dependencies for Tailwind, DaisyUI, PostCSS, Pug, Vue Meta and Autoprefixer. We just need to include TNT as a dependency here, and provide the logic to be hooked into Webpack. So, it's just the two dependencies? Hmm... Three. We should add "},{type:b,tag:h,props:{},children:[{type:a,value:"raw-loader"}]},{type:a,value:"; the Pug Vue CLI includes it, and my own experimental project made use of it without ever declaring the dependency explicitly (it might've failed if I'd had "},{type:b,tag:h,props:{},children:[{type:a,value:ei}]},{type:a,value:" files instead of Vue Single File Components). So..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn add https:\u002F\u002Fgithub.com\u002Fthombruce\u002Ftnt pug-plain-loader raw-loader\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"NOTE: TNT is not yet published on NPM. Shouldn't be a problem, but we'll revisit these dependencies in the future when it should be referencable by name instead of GitHub repository URL."}]}]},{type:a,value:f},{type:b,tag:S,props:{id:d$},children:[{type:b,tag:o,props:{href:"#integration-logic",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:ea}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Last thing to do then (before we work out how to publish this as discoverable by Vue CLI) is to write the Webpack logic that should chain my steps and configuration into that used by default in Vue CLI projects."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"In order to install Pug, we will be copying across the contents pretty much verbatim from "},{type:b,tag:o,props:{href:ej,rel:[D,E,F],target:G},children:[{type:a,value:ej}]},{type:a,value:". That's the Vue CLI Pug plugin, and what the logic in that file does is essentially just tell Webpack how to handle "},{type:b,tag:h,props:{},children:[{type:a,value:ei}]},{type:a,value:" files when it finds them and the contents of Vue Single File Components that have "},{type:b,tag:h,props:{},children:[{type:a,value:"\u003Ctemplate lang=\"pug\"\u003E"}]},{type:a,value:" as part of their contents. We want TNT to do the same, to do "},{type:b,tag:ay,props:{},children:[{type:a,value:"exactly"}]},{type:a,value:" the same, so we're copying that."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"In our plugin's "},{type:b,tag:h,props:{},children:[{type:a,value:cR}]},{type:a,value:cS}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,ek,cT,P,B,H]},children:[{type:a,value:bk}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,bi]},children:[{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:bJ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bL,p]},children:[{type:a,value:bM}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n  api"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:"chainWebpack"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,bi]},children:[{type:a,value:"webpackConfig"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bL,p]},children:[{type:a,value:bM}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,ax]},children:[{type:a,value:"\u002F\u002F Remove any existing rule added from a previous version of the plugin (npm uninstall\u002F yarn remove will remove the plugin, but leave behind the webpack rules)"}]},{type:a,value:el},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"rules"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:"delete"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:em}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:cU},{type:b,tag:c,props:{className:[d,ax]},children:[{type:a,value:"\u002F\u002F Rules taken from: https:\u002F\u002Fvue-loader.vuejs.org\u002Fguide\u002Fpre-processors.html#pug"}]},{type:a,value:el},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:I}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:cs}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:em}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:"test"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,bl]},children:[{type:b,tag:c,props:{className:[d,aB]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,bm,bn]},children:[{type:b,tag:c,props:{className:[d,bN,bO]},children:[{type:a,value:ct}]},{type:a,value:en},{type:b,tag:c,props:{className:[d,bo,B]},children:[{type:a,value:bz}]}]},{type:b,tag:c,props:{className:[d,aB]},children:[{type:a,value:au}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:eo},{type:b,tag:c,props:{className:[d,ax]},children:[{type:a,value:"\u002F\u002F this applies to \u003Ctemplate lang=\"pug\"\u003E in Vue components"}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:ep}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'vue-loader'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:"resourceQuery"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,bl]},children:[{type:b,tag:c,props:{className:[d,aB]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,bm,bn]},children:[{type:b,tag:c,props:{className:[d,bo,B]},children:[{type:a,value:eq}]},{type:b,tag:c,props:{className:[d,bN,bO]},children:[{type:a,value:er}]},{type:a,value:cu}]},{type:b,tag:c,props:{className:[d,aB]},children:[{type:a,value:au}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:es}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:bA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:cV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:cv}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:cw}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:bA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:cb}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:cb}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:eo},{type:b,tag:c,props:{className:[d,ax]},children:[{type:a,value:"\u002F\u002F this applies to pug imports inside JavaScript, i.e. .pug files"}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:ep}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'raw-pug-files'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'pug-raw'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:bA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:cV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:cv}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:et}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:bA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:cb}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:es}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:bA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:cV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:cv}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:cw}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:bA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:cb}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:cb}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"But we do need to add our own adaptations in order to inform the existing PostCSS installation that it should use the tailwindcss and autoprefixer plugins we're including as dependencies. And as well as this, we want to provide some default configuration to the tailwindcss plugin."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"To achieve this, I'm going to look at the existing Vue CLI Tailwind plugin by Jens Eggerstedt ("},{type:b,tag:o,props:{href:"https:\u002F\u002Fgithub.com\u002Fforsartis",rel:[D,E,F],target:G},children:[{type:a,value:"forsartis on GitHub"}]},{type:a,value:"), "},{type:b,tag:o,props:{href:"https:\u002F\u002Fgithub.com\u002Fforsartis\u002Fvue-cli-plugin-tailwind",rel:[D,E,F],target:G},children:[{type:a,value:"forsartis\u002Fvue-cli-plugin-tailwind"}]},{type:a,value:v}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Eggerstedt's plugin includes some prompts which ask the installer if they want to create a full, minimal or no config at all for TailwindCSS. I'll be modifying this so that no prompts are asked, and my own specific TailwindCSS config gets created no matter what. Why? Well... it's going to be simplest, and for my own purposes I will generally be installing TNT any time I initialise a Vue project, so I want all of my default configuration when I do that - I want "},{type:b,tag:q,props:{},children:[{type:a,value:"conventions"}]},{type:a,value:v}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So, now we're going to write a "},{type:b,tag:h,props:{},children:[{type:a,value:"generator.js"}]},{type:a,value:" file for our plugin that installs the @thombruce\u002Ftnt dependency, injects the import and Vue.use for @thombruce\u002Ftnt into the project's "},{type:b,tag:h,props:{},children:[{type:a,value:cc}]},{type:a,value:", and creates some default configuration files. The result of my efforts is this:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,ek,cT,P,B,H]},children:[{type:a,value:bk}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,bi]},children:[{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:bJ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bL,p]},children:[{type:a,value:bM}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:bP}]},{type:a,value:" postcss "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:"readPostcssConfig"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:bP}]},{type:a,value:" configs "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n    dependencies"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:b$}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'https:\u002F\u002Fgithub.com\u002Fthombruce\u002Ftnt'"}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n    postcss"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n      plugins"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n        tailwindcss"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n        autoprefixer"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]},{type:a,value:"\n\n  configs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:cW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:cX}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,eu,p]},children:[{type:a,value:bX}]},{type:a,value:ev},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:cW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:cX}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,eu,p]},children:[{type:a,value:bX}]},{type:a,value:cW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:cX}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]},{type:a,value:ew},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:"extendPackage"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:ev},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]},{type:a,value:ew},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:"onCreateComplete"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bL,p]},children:[{type:a,value:bM}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:"importTNT"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:ex}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:bJ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"initConfig"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:"injectPurgeConfig"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:"injectTailwindPlugins"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Now, the file itself does have a bit more in it than that. There are several functions here, but I just want to refer to them by name for the time being. What's going on here? Well..."}]},{type:a,value:f},{type:b,tag:cd,props:{},children:[{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"The @thombruce\u002Ftnt dependency is being added."}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"The PostCSS plugin configuration is being altered."}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"These both happen in the "},{type:b,tag:h,props:{},children:[{type:a,value:"api.extendPackage(configs);"}]},{type:a,value:" step."}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"With that done and \"onCreateComplete\", we then..."}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Generate the "},{type:b,tag:h,props:{},children:[{type:a,value:ad}]},{type:a,value:aP},{type:b,tag:h,props:{},children:[{type:a,value:cY}]},{type:a,value:" statements for the "},{type:b,tag:h,props:{},children:[{type:a,value:cc}]},{type:a,value:" file."}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Generate a fresh TailwindCSS config with "},{type:b,tag:h,props:{},children:[{type:a,value:ex}]},{type:a,value:v}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Inject our own PurgeCSS configuration into that config."}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Inject our own plugins configuration into that config."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"And that's it. In fact, it works! I've tested the installation like so..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn add --dev file:\u002FUsers\u002Fthombruce\u002FDeveloper\u002Fthombruce\u002Fvue-cli-plugin-tnt\nvue invoke @thombruce\u002Ftnt\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Pug is working, Tailwind is working, DaisyUI is working. Seemingly... all of it is working. And importantly, we have separated out the parts that make TNT work with Vue CLI and Webpack. The main TNT package now is... actually, it's pretty bare, but it has only the operational dependencies, rather than any platform-specific ones. So it's... stack-agnostic. Fantastic!"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"git add . && git commit -m \"Install and configure dependencies\"\ngit push\n# Done!\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"It isn't yet published properly, but can be installed straight from GitHub and invoked in-project with..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn add --dev https:\u002F\u002Fgithub.com\u002Fthombruce\u002Fvue-cli-plugin-tnt\nvue invoke @thombruce\u002Ftnt\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:dS}]}]},dir:ah,path:"\u002Fblog\u002Freworking-tnt-vue-cli",extension:ai,createdAt:O,updatedAt:O},{slug:eb,description:"Working through Webpack and other bundler conflicts and dependencies",title:"Reworking TNT: Creating a Vue Plugin - Part 2",authors:[af],date:"2021-08-30T17:42:29.000Z",categories:[aX],series:[a$,bH],tags:[bg,ba,aq,bI],toc:[{id:ey,depth:bQ,text:ez}],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:b,tag:o,props:{href:eA},children:[{type:a,value:"Last time"}]},{type:a,value:" we ran into a bit of a blockade trying to make my TNT plugin provide its own default configuration. The issue: Vue CLI, which we used to generate the Dynamite UI project I'm working on, obfuscates a lot of the configurability of Vue and Webpack. Under the hood, Vue CLI is using Webpack... "},{type:b,tag:q,props:{},children:[{type:a,value:cZ}]},{type:a,value:". And this can be configured from the project with our own Webpack config files, I presume, but the obscurity is making it difficult to assess the relationship between the UI project and my plugin."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Today then, we're going to start from scratch and create a more barebones Vue project. This should be a minimum viable reproduction of what we ultimately want to achieve... meaning essentially we just really want two dependencies: Vue and TNT. We might find we need more, which may either need to be added to the Vue project directly or, preferably, to TNT, but the result should be a plugin that works with plain Vue projects, with Vue CLI ones and with Nuxt, because those latter two approaches build upon the first. In fact, this is what this whole \"Reworking TNT\" exercise has been about: prying TNT apart from the Nuxt logic that it previously depended on. Let's get rolling... First, we need a new project:"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Step one: Create an empty project folder and initialise Git."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"mkdir my-vue-project\ncd my-vue-project\ngit init\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"There's nothing to commit. The project is still empty."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Step two: Initialise Yarn."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn init\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"This runs an interactive session. I'm not going to change any of the default values, though; this is just a throwaway project."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Step three: Install the two main dependencies - Vue and TNT - and link to our local version of TNT for development."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn add vue https:\u002F\u002Fgithub.com\u002Fthombruce\u002Ftnt\nyarn link @thombruce\u002Ftnt\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"One thing worth noticing is that at this point, a "},{type:b,tag:h,props:{},children:[{type:a,value:"node_modules"}]},{type:a,value:" directory will have been generated. We don't want that to be committed, so we'll add a "},{type:b,tag:h,props:{},children:[{type:a,value:ef}]},{type:a,value:" file to the root of our project with "},{type:b,tag:h,props:{},children:[{type:a,value:"node_modules\u002F"}]},{type:a,value:" in there to be ignored by Git:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"echo \"node_modules\u002F\" \u003E .gitignore\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"And let's "},{type:b,tag:h,props:{},children:[{type:a,value:"git commit"}]},{type:a,value:bX}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"git add . && git commit -m \"Initialize project\"\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So, Vue and TNT along with all of their child dependencies are now installed..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Next, I'm just going to copy over some files from my Dynamite UI project; specifically, "},{type:b,tag:h,props:{},children:[{type:a,value:eB}]},{type:a,value:aP},{type:b,tag:h,props:{},children:[{type:a,value:cx}]},{type:a,value:". These are the main components that tell Vue what my app looks like and how to render it; they just need some minor alterations for this more basic setup. Removal of any references to VueRouter and the Vuex Store, neither of which is installed. After that, my "},{type:b,tag:h,props:{},children:[{type:a,value:cx}]},{type:a,value:" looks like this:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aH]},children:[{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:ar}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:av}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:cq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aH]},children:[{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:eC}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:av}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'.\u002FApp.vue'"}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bj]},children:[{type:a,value:aq}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:av}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:b$}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"config"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"productionTip"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bG]},children:[{type:a,value:c_}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,bj]},children:[{type:a,value:aq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:cy}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,cz]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,cT,B]},children:[{type:a,value:"render"}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bi]},children:[{type:a,value:eD}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bL,p]},children:[{type:a,value:bM}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:eD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:eC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:"$mount"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'#app'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I've also created a minimal "},{type:b,tag:h,props:{},children:[{type:a,value:eE}]},{type:a,value:" file in a new "},{type:b,tag:h,props:{},children:[{type:a,value:"public"}]},{type:a,value:" folder, the main part of which is that it includes this:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,bR]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:k}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:eF}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]},{type:a,value:"app"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"This is where the Vue project will ultimately be injected..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So I've got an "},{type:b,tag:h,props:{},children:[{type:a,value:"App.vue"}]},{type:a,value:" which handles how the app will be rendered, I have a "},{type:b,tag:h,props:{},children:[{type:a,value:cc}]},{type:a,value:" which tells Vue how to render and it how to behave... and I have an "},{type:b,tag:h,props:{},children:[{type:a,value:eE}]},{type:a,value:" where it should be injected but... isn't, because I still do have to do "},{type:b,tag:q,props:{},children:[{type:a,value:"the next thing"}]},{type:a,value:v}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Vue's own documentation is pretty shy on how to handle this part; the part where Vue is packaged into the HTML template. The docs really seem to favour Vue CLI, which handles all of this automatically. For manual configuration, they link us to Webpack's documentation. Webpack isn't our only option - one can argue that a package like Gulp is simpler and more elegant, particularly for simple cases, and there's Vite too which is a new kid on the package bundling scene from the creators of Vue. For right now though, I think probably Webpack is going to give us the easiest solution thanks to its having some preconceptions, in a manner of speaking. For instance, whereas Gulp would require us to write our own bundling script, Webpack abstracts that part and has some base assumptions about web projects. Like by default, Webpack will look for a "},{type:b,tag:h,props:{},children:[{type:a,value:c$}]},{type:a,value:" and will output the result of bundling that file to "},{type:b,tag:h,props:{},children:[{type:a,value:"dist\u002Fmain.js"}]},{type:a,value:". We may need to install some custom loaders, like Vue Loader... maybe. But err... well, we'll get to that. So..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Step four: Install Webpack and other bundling necessities."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn add --dev webpack webpack-cli webpack-dev-server vue-loader vue-template-compiler style-loader css-loader postcss-loader html-webpack-plugin\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"That's err... a lot of dependencies. And there's at least one missing that we might have mentioned - pug-plain-loader - but this is already being installed by TNT, so there's no need to respecify it. All of these are loaders, bundlers and plugins for Webpack's packaging of the app as a webpage. Also notable: webpack-dev-server is a package that will let us run the bundled application in development mode, just makes it a little easier to check things are working."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Right, but this needs configuring... First, let's add the build and development build scripts to "},{type:b,tag:h,props:{},children:[{type:a,value:bf}]},{type:a,value:" for convenience:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,cm]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:dT}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:dU}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"webpack --mode production\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:"\"start\""}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"webpack-dev-server --mode development\""}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"That way I can just run "},{type:b,tag:h,props:{},children:[{type:a,value:"yarn start"}]},{type:a,value:" to run the dev server. But it still needs a Webpack configuration to reference... That's a bit more verbose."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"In a new file, "},{type:b,tag:h,props:{},children:[{type:a,value:"webpack.config.js"}]},{type:a,value:", I have got:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:bP}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:eG}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:eH}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:bP}]},{type:a,value:" htmlWebpackPlugin "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"html-webpack-plugin\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:bP}]},{type:a,value:" path "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:eI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:"\n\nmodule"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:bk}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n  entry"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n    main"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\".\u002Fsrc\u002Fmain.js\""}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n  module"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n    rules"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:da},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bl]},children:[{type:b,tag:c,props:{className:[d,aB]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,bm,bn]},children:[{type:b,tag:c,props:{className:[d,bN,bO]},children:[{type:a,value:ct}]},{type:a,value:cu},{type:b,tag:c,props:{className:[d,bo,B]},children:[{type:a,value:bz}]}]},{type:b,tag:c,props:{className:[d,aB]},children:[{type:a,value:au}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n        loader"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:eH}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:da},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bl]},children:[{type:b,tag:c,props:{className:[d,aB]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,bm,bn]},children:[{type:b,tag:c,props:{className:[d,bN,bO]},children:[{type:a,value:ct}]},{type:a,value:en},{type:b,tag:c,props:{className:[d,bo,B]},children:[{type:a,value:bz}]}]},{type:b,tag:c,props:{className:[d,aB]},children:[{type:a,value:au}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n        oneOf"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n            resourceQuery"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bl]},children:[{type:b,tag:c,props:{className:[d,aB]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,bm,bn]},children:[{type:b,tag:c,props:{className:[d,bo,B]},children:[{type:a,value:eq}]},{type:b,tag:c,props:{className:[d,bN,bO]},children:[{type:a,value:er}]},{type:a,value:cu}]},{type:b,tag:c,props:{className:[d,aB]},children:[{type:a,value:au}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:eJ},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:cw}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:eJ},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:et}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:cw}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:da},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bl]},children:[{type:b,tag:c,props:{className:[d,aB]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,bm,bn]},children:[{type:b,tag:c,props:{className:[d,bN,bO]},children:[{type:a,value:ct}]},{type:a,value:bp},{type:b,tag:c,props:{className:[d,bo,B]},children:[{type:a,value:bz}]}]},{type:b,tag:c,props:{className:[d,aB]},children:[{type:a,value:au}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n        use"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"style-loader\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"css-loader\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n            loader"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"postcss-loader\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n            options"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n              postcssOptions"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n                plugins"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:eK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"tailwindcss\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:eK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"autoprefixer\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:"\n                "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:"\n              "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:bA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ce},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:cy}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,cz]},children:[{type:a,value:eG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:cy}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,cz]},children:[{type:a,value:"htmlWebpackPlugin"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n      template"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:" path"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:cv}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:eL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"public\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"index.html\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"A pretty minimal Webpack configuration, all things considered. I don't know if it's the "},{type:b,tag:ay,props:{},children:[{type:a,value:"absolute"}]},{type:a,value:" minimum for my needs, but it's minimal enough."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Apart from this, I also have a "},{type:b,tag:h,props:{},children:[{type:a,value:cf}]},{type:a,value:" file with contents:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:bk}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:eM},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:eN},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:eO},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,bl]},children:[{type:b,tag:c,props:{className:[d,aB]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,bm,bn]},children:[{type:a,value:bS},{type:b,tag:c,props:{className:[d,bo,B]},children:[{type:a,value:bz}]}]},{type:b,tag:c,props:{className:[d,aB]},children:[{type:a,value:au}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n    content"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'.\u002Findex.html'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'.\u002Fsrc\u002F**\u002F*.{vue,js,ts,jsx,tsx}'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n  darkMode"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bG]},children:[{type:a,value:c_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,ax]},children:[{type:a,value:"\u002F\u002F or 'media' or 'class'"}]},{type:a,value:"\n  theme"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:eP},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n  variants"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:eP},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ce},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:db}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:eQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"These contents could in fact be inserted into the Webpack config file instead, in the empty object at "},{type:b,tag:h,props:{},children:[{type:a,value:"[\"tailwindcss\", {}],"}]},{type:a,value:"... I could in fact also separate out the PostCSS config from Webpack into a "},{type:b,tag:h,props:{},children:[{type:a,value:eR}]},{type:a,value:" file, which includes that declaration. In fact..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"That could be the answer to my problem."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"See, I already know that Tailwind's config file location can be customised by setting its path explicitly in the PostCSS config: "},{type:b,tag:o,props:{href:eS,rel:[D,E,F],target:G},children:[{type:a,value:eS}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I can also change the path to the default PostCSS config file by passing the option to the PostCSS loader: "},{type:b,tag:o,props:{href:eT,rel:[D,E,F],target:G},children:[{type:a,value:eT}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The combination of these two options should enable me to specify that my PostCSS config and my Tailwind config live in my TNT plugin's folder... right? Obviously."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"And because the config files are JavaScript, I should be able to have them (or some other part of the stack) communicate that "},{type:b,tag:ay,props:{},children:[{type:a,value:cO}]},{type:a,value:" a config file does exist in the root project directory, "},{type:b,tag:ay,props:{},children:[{type:a,value:"then"}]},{type:a,value:" do use that instead. That way, an end user would only have to install the essential dependencies, then reference our PostCSS config file, and things would... work seamlessly."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Is that the best approach? Probably not..."}]},{type:a,value:f},{type:b,tag:ca,props:{},children:[]},{type:a,value:f},{type:b,tag:bT,props:{id:ey},children:[{type:b,tag:o,props:{href:"#quick-aside",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:ez}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I mentioned pug-plain-loader specifically up above. Is this strictly a dependency of TNT or is it one that should be moved into the inheriting projects? I sort of just install it out of habit every time I install Pug. Strictly though, it is a Webpack dependency... meaning that if an inheriting project used Vite or Gulp or some other process to package things, it wouldn't be essential. So then..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"cd ..\u002Ftnt\nyarn remove pug-plain-loader\ngit add . && git commit -m \"Remove pug-plain-loader\"\ngit push\ncd ..\u002Fmy-vue-project\nyarn upgrade @thombruce\u002Ftnt --latest\nyarn add --dev pug-plain-loader\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I also need to "},{type:b,tag:h,props:{},children:[{type:a,value:cP}]},{type:a,value:" over on Dynamite UI and "},{type:b,tag:h,props:{},children:[{type:a,value:"yarn add --dev pug-plain-loader"}]},{type:a,value:" so that that continues to work as well. I don't need to modify any Webpack business there, because it seems Vue CLI still picks up on the use of Pug automatically... however I could instead use the "},{type:b,tag:h,props:{},children:[{type:a,value:eU}]},{type:a,value:" option to install Pug via Vue CLI template."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"In fact looking at the package for vue-cli-plugin-pug at "},{type:b,tag:o,props:{href:cr,rel:[D,E,F],target:G},children:[{type:a,value:cr}]},{type:a,value:"... There isn't a great deal going on there. Just a "},{type:b,tag:h,props:{},children:[{type:a,value:bf}]},{type:a,value:" file with pug, pug-plain-loader and raw-loader dependencies and an "},{type:b,tag:h,props:{},children:[{type:a,value:cR}]},{type:a,value:" which chains into the Webpack setup. So hold up just a second! Could I create a \"vue-cli-plugin-tnt\" that does the same? That, for example, includes all of the Webpack and loader dependencies I would want and chains into the Webpack process to configure those? Answer..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Yes, I absolutely could do that for Vue CLI projects. It would list TNT as a dependency, configure it automatically, and we'd be rolling..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So then... we should absolutely keep TNT Core, let's call it, as barebones as possible. Make no assumptions that the end user will be using Webpack or some other bundler, or Vue CLI or Nuxt, and instead maintain separate dependencies which specifically install it for Vue CLI and Nuxt, and... for plain Vue? We can aim to document the far more involved setup that includes a heap of extra dependencies... at least for the time being. In future, we can add a production-ready build, maybe. Will have to look into that."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The thing is... I don't want this to be a big, unproductive diversion. The main thing I want is for TNT to be compatible with the toolings I will be using specifically, meaning just Nuxt and Vue CLI for the time being."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So then..."}]},{type:a,value:f},{type:b,tag:ca,props:{},children:[]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"We will have to consider better approaches for installation on a plain Vue project at some other time. For our purposes now, though, TNT has been stripped of all Nuxt-specific dependencies and of Vue CLI specific ones."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I'm already maintaining a nuxt-tnt package that does not yet depend on this alternate version of TNT, but will eventually."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The last thing to do as of right now is to create an additional project that bundles TNT as a Vue CLI dependency. In the next post, we'll do just that..."}]}]},dir:ah,path:"\u002Fblog\u002Freworking-tnt-vue-plugin-part-2",extension:ai,createdAt:O,updatedAt:O},{slug:eA,description:"Moving Vue Meta and Tailwind CSS into my TNT Vue plugin",title:"Reworking TNT: Creating a Vue Plugin - Part 1",authors:[af],date:"2021-08-29T15:18:52.000Z",categories:[aX],series:[a$,bH],tags:[bg,ba,aq,bI],toc:[],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:b,tag:o,props:{href:eV},children:[{type:a,value:"When we left off"}]},{type:a,value:" I had added the dependency for Vue Meta to TNT and had installed and configured it in Dynamite UI. This was a problem, as preferably TNT would install its own dependencies without any extra configuration being required. So that's what we'll do today, and in doing so we will make TNT a sort-of \"proper\" Vue plugin. Let's look at how Vue Meta is initialised as an example:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aH]},children:[{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:aY}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:av}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:b_}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:aY}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"This is what we placed in Dynamite UI's "},{type:b,tag:h,props:{},children:[{type:a,value:cc}]},{type:a,value:". It installs Vue Meta as a Vue plugin. And this is something we want TNT to do instead. Meaning that actually that exact code should live somewhere in the TNT project, and Dynamite UI should instead feature:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bj]},children:[{type:a,value:aq}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:av}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:b$}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,bj]},children:[{type:a,value:aq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"...and to achieve that, TNT needs to export an "},{type:b,tag:h,props:{},children:[{type:a,value:"install()"}]},{type:a,value:" function. This is all well documented in the Vue docs: "},{type:b,tag:o,props:{href:eW,rel:[D,E,F],target:G},children:[{type:a,value:eW}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Anyway, my install function is going to live in a new file in my TNT project at "},{type:b,tag:h,props:{},children:[{type:a,value:c$}]},{type:a,value:j}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"cd tnt\ntouch src\u002Findex.js\n"}]}]}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aH]},children:[{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:aY}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:av}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:b_}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:bw}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:bx}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:cp}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,bi]},children:[{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:bJ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:aY}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"When any project installing TNT includes "},{type:b,tag:h,props:{},children:[{type:a,value:cY}]},{type:a,value:" now, it should run everything inside of the "},{type:b,tag:h,props:{},children:[{type:a,value:cp}]},{type:a,value:" funtion. In this case, just "},{type:b,tag:h,props:{},children:[{type:a,value:"Vue.use(VueMeta)"}]},{type:a,value:" for now. Let's see if that's worked:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"cd ..\u002Fdynamite-ui\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Then in "},{type:b,tag:h,props:{},children:[{type:a,value:cx}]},{type:a,value:", I replace my old Vue Meta imports with TNT:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aH]},children:[{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:ar}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:av}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:cq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bj]},children:[{type:a,value:aq}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:av}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:b$}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,bj]},children:[{type:a,value:aq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"And see if it runs..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn serve\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Ah-ha, problem... Unusual problem. Dynamite UI has ESLint installed and is complaining that it can't find an ESLint configuration for the files "},{type:b,tag:h,props:{},children:[{type:a,value:"..\u002Ftnt\u002Fsrc\u002Findex.js"}]},{type:a,value:j}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"Syntax Error: Error: No ESLint configuration found in \u002FUsers\u002Fthombruce\u002FDeveloper\u002Ftnt\u002Fsrc\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I expect this is a problem with "},{type:b,tag:h,props:{},children:[{type:a,value:dc}]},{type:a,value:" linked packages and wouldn't occur for a more typical installation (indeed it hasn't cropped up for other dependencies). Fortunately, there's an easy solution. In my Dynamite UI project, I just need to add to "},{type:b,tag:h,props:{},children:[{type:a,value:"vue.config.js"}]},{type:a,value:j}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:bk}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n  configureWebpack"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n    resolve"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:" symlinks"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bG]},children:[{type:a,value:c_}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"If I now try to "},{type:b,tag:h,props:{},children:[{type:a,value:dd}]},{type:a,value:" again..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Success! Vue Meta is successfully being installed as a sort of sub-plugin of TNT. Perfect. But the configuration is still being handled by Dynamite UI..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"That's not strictly a problem. In the absence of the "},{type:b,tag:h,props:{},children:[{type:a,value:bS}]},{type:a,value:" attribute configured on my main Vue component, Daisy UI simply falls back to default theme behaviour. This is, in fact, preferable to a default configuration of my own as I believe it adjusts based on light\u002Fdark theme settings on the host machine. Let's move onto TailwindCSS config..."}]},{type:a,value:f},{type:b,tag:ca,props:{},children:[]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"There's quite a lot more going on to configure TailwindCSS in Dynamit UI. We have a "},{type:b,tag:h,props:{},children:[{type:a,value:cf}]},{type:a,value:" file and we need to manually "},{type:b,tag:h,props:{},children:[{type:a,value:"import '.\u002Findex.css'"}]},{type:a,value:" in "},{type:b,tag:h,props:{},children:[{type:a,value:cc}]},{type:a,value:". But these items don't yet diverge from what I would like TNT to provide as default behaviour. Ergo, TNT should handle these configurations and imports if possible."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The second part is easy. I'm just going to recreate the CSS file in my TNT project at "},{type:b,tag:h,props:{},children:[{type:a,value:"src\u002Fassets\u002Findex.css"}]},{type:a,value:j}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,bq]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,K]},children:[{type:b,tag:c,props:{className:[d,cs]},children:[{type:a,value:de}]},{type:a,value:" base"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,K]},children:[{type:b,tag:c,props:{className:[d,cs]},children:[{type:a,value:de}]},{type:a,value:" components"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,K]},children:[{type:b,tag:c,props:{className:[d,cs]},children:[{type:a,value:de}]},{type:a,value:" utilities"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"...and import it from TNT's "},{type:b,tag:h,props:{},children:[{type:a,value:c$}]},{type:a,value:cS}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aH]},children:[{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:aY}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:av}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:b_}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'.\u002Fassets\u002Findex.css'"}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:bw}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:bx}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:cp}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,bi]},children:[{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:bJ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:aY}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Easy peasy! I can delete the references to this CSS file from the host project, Dynamite UI, and it's still working as intended. Perfect!"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"But the actual configuration of Tailwind is a little more difficult..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The question is: How does Tailwind know that it's installed? It's a better question than it sounds like. We've just discussed how TNT and Vue Meta are each acknowledged by the Vue app, but how does Vue know about Tailwind? Well..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"As well as a "},{type:b,tag:h,props:{},children:[{type:a,value:cf}]},{type:a,value:" file, my project also features a "},{type:b,tag:h,props:{},children:[{type:a,value:eR}]},{type:a,value:" file with the contents:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:bk}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ce},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n    tailwindcss"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n    autoprefixer"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I believe we've discussed PostCSS previously - we had some version trouble. PostCSS is apparently part of the default Vue configuration, so Vue behind the scenes knows to look for this configuration file, and PostCSS in turn knows to look for these listed plugins. This, I believe, is all down to a hidden Webpack configuration. Webpack is a great tool, handles the packaging of... web things. Doesn't matter; point is it's doing this behind the scenes because of Vue CLI, which is the way that I generated this project. Vue CLI is cleverer than plain Vue - it brings along a lot of preconfigured conventions... a lot like Nuxt... so... a lot like what we've been trying to avoid. Thing is... my project should be installable in a Vue CLI project, in a Nuxt one, or just in a plain old Vue one. And I think understanding the configuration of a plain old Vue one would inform decisions made for Vue CLI and for Nuxt. We in fact already have a separate repo for Nuxt installations - might we also consider one for Vue CLI? They will, "},{type:b,tag:q,props:{},children:[{type:a,value:cZ}]},{type:a,value:" be incompatible with one another, but that's all the more reason to have a base project that works a certain way with just plain old Vue."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:bX}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"All of that is to say, I have made a mistake. Dynamite UI was generated with Vue CLI, but I need to take a step backwards, go another layer up the abstraction ladder and consider how a very simple Vue project would install this package..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"In other words... I'm going to call this entry right here and we'll begin a fresh project in the next one."}]}]},dir:ah,path:"\u002Fblog\u002Freworking-tnt-vue-plugin-part-1",extension:ai,createdAt:O,updatedAt:O},{slug:eV,description:"Adding Vue Meta to my TNT Vue.js plugin",title:"Reworking TNT: Vue Meta",authors:[af],date:"2021-08-28T00:59:19.000Z",categories:[aX],series:[a$,bH],tags:[bg,ba,aq,bI],toc:[],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:a,value:dD},{type:b,tag:o,props:{href:eX},children:[{type:a,value:dQ}]},{type:a,value:", I added a little data attribute directly to the HTML tag on my new project, Dynamite UI. This is something that I said I would ideally address in the future - a configuration that, actually, should be handled by the TNT plugin. Well... I'm back and I have the solution. It occurred to me while doing something else entirely, actually: there was nothing special about the way it worked with the Nuxt module, it was just "},{type:b,tag:o,props:{href:"https:\u002F\u002Fvue-meta.nuxtjs.org\u002F",rel:[D,E,F],target:G},children:[{type:a,value:"Vue Meta"}]},{type:a,value:". I had thought it was something I'd added to my Nuxt config, which it was, but it was a configuration option that gets passed along to Vue Meta. So, what is Vue Meta?"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Vue Meta is actually developed by the people behind Nuxt... at least, I think it is. It's official site is a subdomain of nuxtjs.org. It's a plugin that enables the addition of tags and meta attributes to the HTML document's "},{type:b,tag:h,props:{},children:[{type:a,value:"\u003Chead\u003E"}]},{type:a,value:" tag. This is typically off limits to Vue components, but Vue Meta makes it possible to define and overwrite attributes directly from Vue components. And for my purposes right now, it also exposes a "},{type:b,tag:h,props:{},children:[{type:a,value:"htmlAttrs"}]},{type:a,value:" object for defining attributes for the "},{type:b,tag:h,props:{},children:[{type:a,value:df}]},{type:a,value:" tag itself. That's all I need to avoid having to directly write my DaisyUI theme data attribute into the HTML template in all of my Vue projects - I can move it now into a configuration option. Let's install..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"cd tnt\nyarn add vue-meta\ngit add . && git commit -m \"Install vue-meta\"\ngit push\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Unfortunately, I'm still not ready to configure features in the TNT Vue plugin, so I'll need to do that over on Dynamite UI..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"cd ..\u002Fdynamite-ui\nyarn upgrade @thombruce\u002Ftnt --latest\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I need to tell Vue to import and use it in my "},{type:b,tag:h,props:{},children:[{type:a,value:cx}]},{type:a,value:cS}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aH]},children:[{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:ar}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:av}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:cq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ax]},children:[{type:a,value:bb}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aH]},children:[{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:aY}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:av}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:b_}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:aY}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"When TNT is a proper Vue plugin, it will actually export a Vue install method and we will instead write something like "},{type:b,tag:h,props:{},children:[{type:a,value:cY}]},{type:a,value:". This then would include the code above, so that telling Vue to \"use\" TNT, it follows that TNT tells Vue to also \"use\" Vue Meta. We'll try to document that when we revisit and do convert this into a proper plugin. For now, Vue Meta is packaged by TNT but installed manually in the projects using TNT."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"At this point, though, I should be able to... Remove "},{type:b,tag:h,props:{},children:[{type:a,value:"data-theme=\"cupcake\""}]},{type:a,value:" from the "},{type:b,tag:h,props:{},children:[{type:a,value:df}]},{type:a,value:" tag in "},{type:b,tag:h,props:{},children:[{type:a,value:eY}]},{type:a,value:eZ}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Instead, add the attribute to... I guess "},{type:b,tag:h,props:{},children:[{type:a,value:eB}]},{type:a,value:" for now:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,bR]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:bU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:b,tag:c,props:{className:[d,bU]},children:[{type:b,tag:c,props:{className:[d,e_]},children:[{type:a,value:f},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:bw}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:bx}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n  metaInfo"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n    htmlAttrs"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'data-theme'"}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'cupcake'"}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:bU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"And when I now "},{type:b,tag:h,props:{},children:[{type:a,value:dd}]},{type:a,value:"... Success! The DaisyUI 'Cupcake' theme is still being used, now courtesy of Vue Meta. Even better, this little exercise has made it a clearer how I go about turning TNT into a proper Vue plugin. That still to come, next time..."}]}]},dir:ah,path:"\u002Fblog\u002Freworking-tnt-vue-meta",extension:ai,createdAt:O,updatedAt:O},{slug:eX,description:"Reconfiguring my Nuxt template module so that it also works with Vue.js",title:"Reworking TNT: Thom's Nuxt Template without Nuxt",authors:[af],date:"2021-08-26T22:36:35.000Z",categories:[aX],series:[a$,bH],tags:[bg,ba,aq,bI],toc:[{id:e$,depth:$,text:fa}],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:a,value:"If you don't already know, TNT is a work in progress Nuxt module I've been working on to simplify the setup of my Nuxt projects. It comes with TailwindCSS and DaisyUI, each with some pre-configurations so that things like theme-switching and CSS purging work. It also comes with the Nuxt Font Awesome module, my own Nuxt Taxonomies project, Lodash, Luxon and Pug... and it insists that Nuxt Content should be a peer dependency (meaning it doesn't install it itself, but your project would be expected to have it installed separately). So a lot of that is Nuxt-specific, but I would like to use Pug, Luxon, Lodash and Tailwind as common dependencies of my Vue projects too. And I would like many of the components I've written or will write for TNT to be available to Vue.js projects as well. What does this mean? Well... I'm going to have to do some rewriting. Ideally, I don't want to be maintaining two wholly distinct libraries to roughly do the same thing for two frameworks, particularly while the frameworks are very closely related. Instead... I either want one library that can be installed in projects of either framework, or I want my Nuxt-specific library to inherit from the Vue one, given that Nuxt is really just an extension of Vue. That's easier said than done. Like I said, this little library is heavily dependent on Nuxt at the moment. And it's possible we'll lose some of the desirable features of those Nuxt versions of libraries by replacing them with either packages made for just Vue instead, or general-purpose ones intended for any NPM-managed project. We'll have to ask the questions: What am I losing by replacing Nuxt Tailwind with just TailwindCSS? What am I losing by replacing Nuxt Font Awesome with Vue Font Awesome or with just Font Awesome? How do we reconcile the inclusion of Nuxt Taxonomies in Vue projects it's completely irrelevant to? If those losses are undesirable or even impermissible, what is the best approach to separate out Nuxt dependencies whilst keeping the core part of TNT's development in one place?"}]},{type:a,value:f},{type:b,tag:S,props:{id:e$},children:[{type:b,tag:o,props:{href:"#creating-dynamite",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:fa}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So, one small part of the reason I started TNT is that I thought such a template could ultimately be useful for creating websites for clients. It currently features two distinct styles of layout and, thanks to DaisyUI, more than a dozen themes. It's intended to be versatile, then. It's also intended to permit me to stop overthinking decisions about UI frameworks and CSS libraries. TailwindCSS makes every component very customisable, while DaisyUI provides a solid foundation for making those customisations. TNT, I thought, would be a strong starting point for any of my projects, whether it be a simple blogging website or a rich application dashboard. And honestly it's well on its way. But it's Nuxt dependent, and not all of my Vue projects will be Nuxt ones. At least I never intended for that to be the case, and now that I've reviewed how I might integrate a Vue or Nuxt frontend with a Rails backend... I don't think it can be. So, I need a new Vue project to play around with. For that, I'm going to make a start on Dynamite CMS, a sort of cousing to my TNT project - it's a content management system intended to work in particular with content websites created using TNT. We'll see if that intention remains the same as the project progresses, for now I just need a simple Vue application where I can play with my TNT template library. Let's create that..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"vue create dynamite-ui\ncd dynamite-ui\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The "},{type:b,tag:h,props:{},children:[{type:a,value:cu}]},{type:a,value:" command depends on Vue CLI being installed and runs an interactive menu allowing me to choose various options. Most of these aren't relevant to the discussion, except that I am specifically "},{type:b,tag:q,props:{},children:[{type:a,value:"not"}]},{type:a,value:" initialising the project with a CSS pre-processor. The project will be using TailwindCSS, PostCSS and - I think - PurgeCSS, which can't be installed that way. Plus, they will be part of TNT, not the parent project."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Here's what I'm thinking comes next..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn add --dev https:\u002F\u002Fgithub.com\u002Fthombruce\u002Ftnt\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"This will install TNT, which I know I've said will be incompatible with Vue... but I don't really know just "},{type:b,tag:q,props:{},children:[{type:a,value:"how incompatible"}]},{type:a,value:" it will be. Maybe this way I can get a sense of what works, what doesn't, and what I need to change."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Predictably after running that command, there are a lot of things installed that I do not want. So I'm gonna jump on over to TNT..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"cd ..\u002Ftnt\ngit co -b vue\ngit push --set-upstream origin vue\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I've also checked out a brand new branch called 'vue' and set the upstream branch on GitHub to this new branch. Not exactly what that means, but if you're unfamiliar with Git or version control at all... essentially now I can make as many modifications as I want without losing the previous state, which is saved as a separate branch on GitHub. Used properly, you always maintain a detailed history with version control meaning you can reset the project at any time to any previous point in time. It also facilitates collaboration, testing, etc. If you're a developer not using version control, start."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"What next? Now I need to do what I just said and butcher TNT a little. Remove all the Nuxt dependencies and replace them with Vue or non-framework-specific ones."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The main script aside, the TNT project essentially consists of four folders: assets, components, layouts and plugins. Of these, assets and plugins should have no problems. We can incorporate their contents into a Vue project with relative ease. In my components and layouts folders, however... well, let's ignore layouts for now - it actually is Nuxt specific. The components folder, however, has several instances of "},{type:b,tag:h,props:{},children:[{type:a,value:fb}]},{type:a,value:dg},{type:b,tag:h,props:{},children:[{type:a,value:fc}]},{type:a,value:" component being used. We can ignore the instances of the "},{type:b,tag:h,props:{},children:[{type:a,value:fc}]},{type:a,value:" component, as these are layout-specific, but those NuxtLinks do need to be addressed before the same components will work in Vue. That part's easy; for the most part, "},{type:b,tag:h,props:{},children:[{type:a,value:fb}]},{type:a,value:" just becomes "},{type:b,tag:h,props:{},children:[{type:a,value:"RouterLink"}]},{type:a,value:"... "},{type:b,tag:q,props:{},children:[{type:a,value:"I think that still works in Nuxt..."}]},{type:a,value:" But actually there are a lot of other problems with these components: uses of the "},{type:b,tag:h,props:{},children:[{type:a,value:"fetch()"}]},{type:a,value:" hook, uses of Nuxt Content, Nuxt Taxonomies and some Nuxt variables. I don't want to sacrifice some of that, so I've made a decision..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"There will at least be two directories (probably two separate libraries). One for Vue components, and one for Nuxt components. The Nuxt components will use, inherit from and extend the Vue ones with Nuxt functionality. The Vue ones will be more general purpose, unable to utilise some of Nuxt's features."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So we probably want to start a new project entirely. TNT should be general purpose, working for both Vue and Nuxt; a separate project, "},{type:b,tag:q,props:{},children:[{type:a,value:"Nuxt TNT"}]},{type:a,value:", should expand upon it. "},{type:b,tag:q,props:{},children:[{type:a,value:"Decision made!"}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I've moved "},{type:b,tag:h,props:{},children:[{type:a,value:cQ}]},{type:a,value:" to "},{type:b,tag:h,props:{},children:[{type:a,value:"@thombruce\u002Fnuxt-tnt"}]},{type:a,value:" and have started a brand new project in the old namespace. The docs remain in the "},{type:b,tag:h,props:{},children:[{type:a,value:cQ}]},{type:a,value:" repo, but other than that it is barebones at the moment. Time to start migrating some components and picking out our dependencies. I won't worry for now about having Nuxt TNT inherit from the new project - that can be left as an exercise for later. For now, I'm simply aiming to get some of that TNT goodness to work for Vue projects not using Nuxt."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"After some messing around, I have a clean TNT repository with no code. But it's pushed to GitHub, so jumping back across to my new Dynamite UI project, I can install this empty package..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"cd ..\u002Fdynamite-ui\nyarn remove @thombruce\u002Ftnt\nyarn cache clean # To clean up any references to the old version and its Git history\nyarn add https:\u002F\u002Fgithub.com\u002Fthombruce\u002Ftnt\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I've removed the old and installed the new. Now I want to be able to actively develop this and see the results on my own machine without having to push the dependency. Fortunately, there's "},{type:b,tag:h,props:{},children:[{type:a,value:dc}]},{type:a,value:v}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"cd ..\u002Ftnt\nyarn link\ncd ..\u002Fdynamite-ui\nyarn link @thombruce\u002Ftnt\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Now, Dynamite UI will use the local, linked version of TNT in development on my machine, so any changes I make will be applied almost immediately (definitely immediately if I have Hot Module Replacement up and running). Time to start actually adding dependencies and components to this thing!"}]},{type:a,value:f},{type:b,tag:ca,props:{},children:[]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The first dependency I want to install is Pug. I don't know how easy this is going to be though. Usually I can just "},{type:b,tag:h,props:{},children:[{type:a,value:eU}]},{type:a,value:" and depend on Vue CLI's implementation, but as I'm working on a plugin I think I'll take my old approach..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"cd ..\u002Ftnt\nyarn add pug pug-plain-loader\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Now, that's - I think - all that's required to get Pug working in the TNT plugin. Unfortunately I don't know if the new dependency will be installed over on Dynamite UI as a linked module... I may need to push TNT and "},{type:b,tag:h,props:{},children:[{type:a,value:cP}]},{type:a,value:". "},{type:b,tag:h,props:{},children:[{type:a,value:dc}]},{type:a,value:" was maybe not made for managing nested dependencies - it wasn't. But if I do remember rightly, Vue should have no problem with just the addition of pug and pug-plain-loader to dependencies. I think Webpack detects their presence, and so no additional config will be needed... at least once I do get this properly installed over on Dynamite UI. But since I need to push and then upgrade, I may as well get a few other dependencies installed too. I certainly want..."}]},{type:a,value:f},{type:b,tag:as,props:{},children:[{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Pug"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"TailwindCSS"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"TailwindCSS Forms"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"DaisyUI"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Theme Change"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"PostCSS (though I think this is already installed)"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Lodash"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Luxon"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"That's all of the dependencies from Nuxt TNT except the icon libraries and those that are Nuxt-specific. "},{type:b,tag:q,props:{},children:[{type:a,value:"We'll revisit icon libraries later."}]},{type:a,value:" Fortunately the only dependency listed above that I was using a Nuxt-specific version of is TailwindCSS; all others are general purpose. So picking the packages to install is pretty easy..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The TailwindCSS docs suggest an install command of "},{type:b,tag:h,props:{},children:[{type:a,value:"npm install -D tailwindcss@latest postcss@latest autoprefixer@latest"}]},{type:a,value:", which includes PostCSS (we believe already installed) and Autoprefixer, which we definitely want too, so... they join the installation:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn add tailwindcss@latest postcss@latest autoprefixer@latest @tailwindcss\u002Fforms daisyui lodash luxon theme-change\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"And since we need to push the project to upgrade it over on Dynamite UI..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"git add .\ngit commit -m \"Install dependencies\"\ngit push\ncd ..\u002Fdynamite-ui\nyarn upgrade @thombruce\u002Ftnt --latest\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Checking the Yarn lockfile over on Dynamite UI, I can confirm that my dependencies are properly installed. To be doubly sure that at least Pug is working, I've modified the default app template of Dynamite UI to express itself in Pug format and I'm running "},{type:b,tag:h,props:{},children:[{type:a,value:dd}]},{type:a,value:"... Navigating to localhost:8080 in my browser... Yup, that appears to be working!"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I'm also confident that Lodash, Luxon and Theme Change are all installed fine, as I will be importing these directly for the most part and don't need global access to them. They're installed, so they're installed successfully."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"TailwindCSS, PostCSS, Autoprefixer, TailwindCSS Forms and DaisyUI... Those need more configuration, and that's not easy or immediately apparent how to achieve. With Nuxt, I benefited from a bunch of build hooks that I could tap into to: 1. Configure the installation in the TNT package itself, and 2. Allow for this configuration to be overwritten per project."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"It's been a little while since I made a proper Vue plugin, so I don't know what options are available to me. For the time being, I think I'm going to configure TailwindCSS directly in the Dynamite UI project... That way I can get a feel for what sort of configuration needs to made and what I need to be able to overwrite."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"# Still in dynamite-ui\nnpx tailwindcss init -p\ngit add . && git commit -m \"Tailwind: npx tailwindcss init -p\"\n# Modify Tailwind config to enable PurgeCSS\ngit add . && git commit -m \"Tailwind: Configure PurgeCSS\"\n# Configure Tailwind CSS\ngit add . && git commit -m \"Tailwind: Configure default CSS\"\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"These are the steps detailed at "},{type:b,tag:o,props:{href:fd,rel:[D,E,F],target:G},children:[{type:a,value:fd}]},{type:a,value:". I've also committed each step so that I will be able to review my git history and see these changes specifically, and in order."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"TailwindCSS Forms is also very easy to add. Just require it from the plugins section in "},{type:b,tag:h,props:{},children:[{type:a,value:cf}]},{type:a,value:eZ}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:bk}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,ax]},children:[{type:a,value:bb}]},{type:a,value:ce},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:db}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,ax]},children:[{type:a,value:bb}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Done. Don't forget to commit the change:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"# Add TailwindCSS forms as a Tailwind plugin\ngit add . && git commit -m \"Tailwind: Add Tailwind Forms plugin\"\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"DaisyUI and and Theme Change are a little more involved. In fact... I never fully got Theme Change working properly with the Nuxt package, though it was close enough - it changed themes, but it didn't successfully load the correct theme on subsequent visits. That's an issue I'll address in the future."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"DaisyUI itself is easy enough to add. Like TailwindCSS Forms, all we need to do is require it as a plugin in our Tailwind config. We'll also safelist the data-theme attribute here so that DaisyUI's themes aren't purged by PurgeCSS:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:bk}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:eM},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:eN},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:eO},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,bl]},children:[{type:b,tag:c,props:{className:[d,aB]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,bm,bn]},children:[{type:a,value:bS},{type:b,tag:c,props:{className:[d,bo,B]},children:[{type:a,value:bz}]}]},{type:b,tag:c,props:{className:[d,aB]},children:[{type:a,value:au}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,ax]},children:[{type:a,value:bb}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,ax]},children:[{type:a,value:bb}]},{type:a,value:ce},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:db}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:eQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,ax]},children:[{type:a,value:bb}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Generally, I think it's supposed to be a good idea to require DaisyUI last... The DaisyUI docs say nothing about TailwindCSS Forms, but they do suggest that if we were using TailwindCSS Typography (a plugin for applying typographic styles to content over which we have little markup control) then it should be required after that because it extends some of its styles. We'll just roll with the assumption that DaisyUI should come last unless otherwise specified."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"We also need to add that "},{type:b,tag:h,props:{},children:[{type:a,value:bS}]},{type:a,value:" attribute to our HTML tag in "},{type:b,tag:h,props:{},children:[{type:a,value:eY}]},{type:a,value:". There has to be a better way to do this, but for now we'll do this the easy way:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,bR]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,"doctype"]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"\u003C!"}]},{type:b,tag:c,props:{className:[d,"doctype-tag"]},children:[{type:a,value:"DOCTYPE"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aZ]},children:[{type:a,value:fe}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:fe}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:"lang"}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:bS}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]},{type:a,value:"cupcake"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Let's commit all of that..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"git add . && git commit -m \"Tailwind: Add DaisyUI plugin\"\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Now, the issue is Theme Change... I'm actually going to double-back and remove Theme Change for now:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"cd ..\u002Ftnt\nyarn remove theme-change\ngit add . && git commit -m \"Uninstall theme-change\"\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Why do that? Because actually adding "},{type:b,tag:h,props:{},children:[{type:a,value:bS}]},{type:a,value:" directly to the "},{type:b,tag:h,props:{},children:[{type:a,value:df}]},{type:a,value:" tag above is a mess-enough for the time being, and because being able to change the theme on the fly isn't critical to my development. There are things I want to manage before we reach that point."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"But where are we at now?"}]},{type:a,value:f},{type:b,tag:as,props:{},children:[{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"TailwindCSS and DaisyUI should each be properly installed"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Pug we already know is working"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Lodash and Luxon are safely assumed to be ready to use"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"This puts me in position to start adding my own templates and components! For the time being, we'll grant that many of the steps above are required to get the TNT plugin working - we'll refine that in the future. The last thing to do at this stage is to create a layout and a component using Tailwind and DaisyUI; and if that works, we've completed this setup."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"One quick copying over of one of my TNT layouts and... Error!"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"Error: PostCSS plugin tailwindcss requires PostCSS 8.\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Not to worry, I've seen this before. In fact, it's an issue that the Tailwind team are aware of an provide a solution to: "},{type:b,tag:o,props:{href:ff,rel:[D,E,F],target:G},children:[{type:a,value:ff}]},{type:a,value:" So then..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn remove tailwindcss postcss autoprefixer\nyarn add tailwindcss@npm:@tailwindcss\u002Fpostcss7-compat postcss@^7 autoprefixer@^9\ngit add . && git commit -m \"Use TailwindCSS Compatibility version\"\ngit push\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"This swaps out the latest version of Tailwind for a compatibility version, the same in every way apparently apart from that it maintains compatibility with older versions of PostCSS."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Let's jump back across to DynamiteUI..."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"cd ..\u002Fdynamite-ui\nyarn upgrade @thombruce\u002Ftnt --latest\nyarn serve\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Success! TailwindCSS is now working, DaisyUI and the chosen theme as well, my custom layout..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Now, it isn't ideal. A lot has been done on DynamiteUI that I'd rather be done in the TNT plugin, but this is a start. It's a lot easier to migrate that functionality up the stream so to speak into TNT than it is to fiddle endlessly with plugin functionality."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"This is the first step. I'm in a position to start developing, because the dependencies I need are all now installed by the one package... they just aren't yet configured by it. We might cover configuring Vue plugins in another post soon, but I'm calling this one here. I have some tidying up and some developing to do."}]}]},dir:ah,path:"\u002Fblog\u002Freworking-tnt-without-nuxt",extension:ai,createdAt:O,updatedAt:O},{slug:"the-perfect-open-source-web-architecture",description:"Open source software should be free for all, easy to develop and easy to deploy",title:"In Consideration of the Perfect Open Source Architecture for Web-based Apps",authors:[af],date:"2021-08-21T14:51:08.000Z",categories:[aX],series:[a$],tags:cA,toc:[{id:fg,depth:$,text:fh},{id:fi,depth:$,text:fj},{id:fk,depth:$,text:fl}],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:a,value:"In my blog post yesterday I declared my intention to make three web-apps - "},{type:b,tag:q,props:{},children:[{type:a,value:fm}]},{type:a,value:bh},{type:b,tag:q,props:{},children:[{type:a,value:dh}]},{type:a,value:aP},{type:b,tag:q,props:{},children:[{type:a,value:fn}]},{type:a,value:" - each of which would be built on, "},{type:b,tag:q,props:{},children:[{type:a,value:"probably"}]},{type:a,value:", Ruby on Rails. That part is... a little selfish. I mean it makes sense; Ruby is a beloved language with a lot of support and development in the open source community. But also... it's the language that my career is based on, and that's the main reason I'm pushing for it. Which again... makes sense. I've worked with Ruby for about ten years, so I of course should run with it as my experience will be of great benefit while managing such a project. That said, it doesn't couple with Nuxt as I'd hoped it might... and other backends like Node.js' Express do. I know for a fact I want what at least functions like a single-repository installation - one click deploys and all that good stuff; essentially something that behaves like a monorepo. If I really want to use Nuxt then... well, the choice should probably be Express. I can couple Vue, the framework Nuxt is based on, with Rails just fine but... do I lose the capability to offer a frontend only install? Say for anyone wanting to deploy their own frontend but using a hosted API? Or for packaging the project as a desktop or mobile app. That is possible with Rails, but a JavaScript Single Page Application (SPA) is probably preferred, right?"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Mainly I'm muddling through all of these questions because I have a contradiction of wants: I want to use Rails, I want to use Nuxt. I can't use both unless... they're separate repositories, and then I lose some ease of installation. As a compromise, I can use Vue in place of Nuxt but I wouldn't have access to my own TNT project unless I modified it extensively... which I'm not ruling out, but that will be a later consideration. Okay, but let's try to reconcile this. What is my philosophy for open source application development? And how do I match that philosophy in application?"}]},{type:a,value:f},{type:b,tag:S,props:{id:fg},children:[{type:b,tag:o,props:{ariaHidden:Q,href:"#the-philosophy",tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:fh}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Okay, so these are hobby projects and I want them to be..."}]},{type:a,value:f},{type:b,tag:cd,props:{},children:[{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Free Software"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Open Source"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Easy to install"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Easy to develop"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Free doesn't necessarily mean absolutely free, but I do mean free as in both liberty and beer. Developers should be able to take the project, adapt it, redistribute it, and they should be able to run it without having to pay. There'll be some caveats to how "},{type:b,tag:q,props:{},children:[{type:a,value:"free"}]},{type:a,value:" it is dependent upon choice of "},{type:b,tag:q,props:{},children:[{type:a,value:"free software"}]},{type:a,value:bK},{type:b,tag:q,props:{},children:[{type:a,value:"open source"}]},{type:a,value:" license, and running it at no cost will be possible but likely to run into hosting costs eventually - the point being there's no payment required to actually use the open source software. And it should be open source, meaning developers can read the source code, contribute to it, creating extensions of it. To ensure that it is easy to develop, the code should be well written, well documented and ultimately well tested. All of this is the easy part."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The hard part is ease of installation. I don't want any developer or other user to have to install several different parts just to get the application running. If they want to host and run the software, this should ideally be a one-click process. Similarly, if they want to run the frontend elsewhere and benefit from someone else's hosting (either paid or provided freely), this too should ideally be a one-click process with ideally only one or two details to configure (the host domain for the backend). Maybe it should have a default host, meaning a true one-click deploy but potentially giving favourable weight to my own hosted solution... or maybe it should ideally also run without requiring a backend. That isn't always possible, but a lot of applications could in fact work with just browser storage alone - this may work with one of the three I'm planning here."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So, it should be free to use, free to modify and redistribute, open to contributions with a clear process and good documentation, and it should install with minimal effort. How do we achieve that?"}]},{type:a,value:f},{type:b,tag:S,props:{id:fi},children:[{type:b,tag:o,props:{ariaHidden:Q,href:"#the-application",tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:fj}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"In order to keep the software free (as in liberty and beer), we just need to choose the right license. As well as the right license, I'll also want to encourage donations and sponsorships so that continuous development can be justified without the end user having to pay anything to use the software. Broadly... there should be options. Like, I can't right now justify hosting an online application for any number of users at no cost to them; but I will always be able to justify making that software free for them to install and host themselves. Perhaps a ways down the line, we can have a paid service model that offers managed hosting, but I'll always keep the core, open source project free in the sense of both liberty and beer."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Ease of development is very much a case of keeping code well-written, well-documented and well-tested. In these efforts, we will benefit from the underlying tech stack being well-supported and loved by the community. I've pretty much settled on Ruby and Vue for the back and front end respectively - these both have large, supportive communities. Ease of development then is just a matter of ensuring that the code always remains clear, documented and tested. It also ties into whether or not the software is easy to install; ideally, a developer should be able to pull the project once and get it running without any unconventional changes in their setup. That is to say, if they have Ruby and they have Node installed, this should run on their system no problem. The rest of the stack, then, should be environment agnostic. "},{type:b,tag:q,props:{},children:[{type:a,value:"Maybe"}]},{type:a,value:" there are some configurations I do need to make, like favouring a certain database, but we'll aim to avoid this as much as possible."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"What does that leave? Ease of installation, which is the same as ease of deployment really. And when I speak about deployment, I want it to mean to varied environments. For instance, to the web - that's the easy part - to desktop applications and to mobile. Now, I've deployed Vue apps as desktop and mobile apps in the past, but this - "},{type:b,tag:q,props:{},children:[{type:a,value:cZ}]},{type:a,value:" - requires a little bit of decoupling from the Ruby on Rails backend. I see two applications here:"}]},{type:a,value:f},{type:b,tag:cd,props:{},children:[{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"The Vue application, capable of running in browser or in a wrapper as either a desktop or mobile application."}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"The Ruby backend, which serves both an API as well as the Vue application if it is navigated to via HTTP."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"And both of these should be runnable with a single-click installation, but importantly the Vue app that the Ruby backend does serve is the same as the first application."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So then... two projects? The Vue application itself, then the Ruby backend which includes that application as a dependency or perhaps as a submodule? ... Maybe. The problem with a dependency approach is that it does run counter to one ease of development principle; if a dev goes looking to modify the frontend but the frontend is an external dependency, suddenly they need to install and perhaps even fork an entirely separate application. I just need to decide whether this is two repos or just the one monorepo."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Honestly, didn't think I'd go this way but I am leaning towards trying to put this together as a monorepo. The frontend would sit in a dedicated directory, and the root "},{type:b,tag:h,props:{},children:[{type:a,value:bf}]},{type:a,value:" file could list all of the scripts and dependencies needed for both aspects of the project. However... I'm undecided and I think I will go with two separate repositories initially, if only because it's a pattern I've worked with before."}]},{type:a,value:f},{type:b,tag:S,props:{id:fk},children:[{type:b,tag:o,props:{ariaHidden:Q,href:"#in-summary",tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:fl}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So in conclusion... We have a sort of checklist of considerations and answers to those considerations:"}]},{type:a,value:f},{type:b,tag:as,props:{},children:[{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Choose a license (I'll probably stick with MIT initially but change it up later if it makes sense)"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Keep it well documented, well tested and open"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Separate the front and backend, but relate via dependency for ease of installation of every aspect of the application"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Monorepo or separate repos? (We'll go with separate for the time being, but a monorepo does sound attractive - can change this later)"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Gonna continue to detail the process as I build this out in future blog entries."}]}]},dir:ah,path:"\u002Fblog\u002Fthe-perfect-open-source-web-architecture",extension:ai,createdAt:O,updatedAt:O},{slug:"planned-projects-and-works-in-progress",description:"Making a note here of all of the projects I want to start or continue working on.",title:"Planned Projects and Works In Progress",authors:[af],date:"2021-08-20T18:15:52.000Z",categories:cA,series:cA,tags:cA,toc:[{id:fo,depth:$,text:aq},{id:fp,depth:$,text:fq},{id:fr,depth:bQ,text:fs},{id:ft,depth:bQ,text:fu},{id:fv,depth:$,text:fw},{id:fx,depth:bQ,text:fy},{id:fz,depth:$,text:fA},{id:fB,depth:$,text:fC}],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:a,value:"Somewhere in this blog post I will talk about a project management tool that I've worked on in the past and intend to redo from scratch in the future... and damn, do I need that. I have this problem where I've just got all of these ideas on the go at once, on top of actual work and other responsibilities. It's hard to keep track. I just need to put them to paper, so to speak - write them down, keep a list and mark them off it as I go. Anyway, hi, this is that list. These are some of the projects that I'm either currently working on or thinking about working on soon."}]},{type:a,value:f},{type:b,tag:S,props:{id:fo},children:[{type:b,tag:o,props:{href:"#tnt",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:aq}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"TNT, or "},{type:b,tag:q,props:{},children:[{type:a,value:fD}]},{type:a,value:", is a Nuxt theme\u002Fcomponent library\u002Fset of conventions. It's a set of templates plus a collection of third party libraries that I frequently install so... I packaged them all up in the one Nuxt module for ease of installation. It's a work in progress, but it's already pretty strong. Any new static website I want to deploy, I essentially just need to generate a Nuxt project, install this one package and I am ready to go. Despite this, TNT has not yet hit its first "},{type:b,tag:q,props:{},children:[{type:a,value:"release"}]},{type:a,value:", by which I mean I've not yet published the package on NPM. It is currently installable only as a Git dependency, available here: "},{type:b,tag:o,props:{href:co,rel:[D,E,F],target:G},children:[{type:a,value:co}]},{type:a,value:". There's a fair bit that still needs ironing out, like the appearance of the classic template on mobile screens, ease of configuration of custom menus, titles and the like, but it does already make getting started with Nuxt roughly five times quicker! It's getting updated all the time as I add more to my static websites and produce others. Speaking of which..."}]},{type:a,value:f},{type:b,tag:S,props:{id:fp},children:[{type:b,tag:o,props:{href:"#my-static-websites",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:fq}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I actually started TNT to collect my conventions as I worked on these. I currently have eight static websites deployed that use TNT. They are:"}]},{type:a,value:f},{type:b,tag:cd,props:{},children:[{type:a,value:f},{type:b,tag:z,props:{},children:[{type:b,tag:o,props:{href:fE,rel:[D,E,F],target:G},children:[{type:a,value:fF}]}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:b,tag:o,props:{href:"https:\u002F\u002Fcode.thombruce.com\u002F",rel:[D,E,F],target:G},children:[{type:a,value:"Code"}]}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:b,tag:o,props:{href:"https:\u002F\u002Fhappy.thombruce.com\u002F",rel:[D,E,F],target:G},children:[{type:a,value:"Happy"}]}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:b,tag:o,props:{href:"https:\u002F\u002Fpopcorn.thombruce.com\u002F",rel:[D,E,F],target:G},children:[{type:a,value:"Popcorn"}]}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:b,tag:o,props:{href:fG,rel:[D,E,F],target:G},children:[{type:a,value:"Ink"}]}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:b,tag:o,props:{href:"https:\u002F\u002Fordahhh.thombruce.com\u002F",rel:[D,E,F],target:G},children:[{type:a,value:"Ordahhh!"}]}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:b,tag:o,props:{href:"https:\u002F\u002Fbeer.thombruce.com\u002F",rel:[D,E,F],target:G},children:[{type:a,value:"Free as in Beer"}]}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:b,tag:o,props:{href:"https:\u002F\u002Fthombruce.github.io\u002Ftnt",rel:[D,E,F],target:G},children:[{type:a,value:"TNT Docs"}]}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"A lot of these are very simple blogging websites. Free as in Beer is intended to be a sort of catalog website of freely available software and resources, and TNT docs is a documentation website; these two need a bit of work yet, but TNT is working for the others beautifully."}]},{type:a,value:f},{type:b,tag:bT,props:{id:fr},children:[{type:b,tag:o,props:{href:"#journal-know-it-all-and-review",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:fs}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"That's a lot already, but I still have other projects needing documentation and these three other blogging sites I'd like to throw onto the web. The idea is that... well... I have a lot that I want to say. Or I don't, but when I do I may want to talk about any of a bunch of subjects that I'm invested in: science, politics, film and TV, programming, writing and so on and so on... But readers or visitors to a website in general don't want... all of that. For example, if I had a science blog that took a left turn into creative writing or opinion, this would not be something necessarily that the readership wanted. This is why I don't just maintain all of these blogs at thombruce.com or blog.thombruce.com or whatever; as a general rule, I'm separating interests into individual domains. These three left to do represent science, opinion and personal blogging; "},{type:b,tag:q,props:{},children:[{type:a,value:"Know It All"}]},{type:a,value:bh},{type:b,tag:q,props:{},children:[{type:a,value:"Review"}]},{type:a,value:aP},{type:b,tag:q,props:{},children:[{type:a,value:aX}]},{type:a,value:" respectively. It won't take a lot to get them online; I just haven't done it yet. Each one that I do put online does require a slight change to my main site, "},{type:b,tag:o,props:{href:fE,rel:[D,E,F],target:G},children:[{type:a,value:fF}]},{type:a,value:", which does list all blog posts across all sites, read from a JSON feed each of them exposes. Though, speaking of that..."}]},{type:a,value:f},{type:b,tag:bT,props:{id:ft},children:[{type:b,tag:o,props:{href:"#connected-events-in-static-deployment",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:fu}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"This currently doesn't work automatically. When I deploy a blog post to one of my sites, I currently need to also manually redeploy thombruce.com. Preferably, each site build would automatically trigger the redeploy of thombruce.com. Alternatively, I could rewrite the code on thombruce.com to fetch the data at runtime - meaning when a visitor arrives on the site. This would be... slower, less efficient. It's less worth considering than the preferable approach."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"To achieve the desired result, I really just need to trigger a GitHub Action, either via GitHub's API or via a webhook; both documented here: "},{type:b,tag:o,props:{href:fH,rel:[D,E,F],target:G},children:[{type:a,value:fH}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The issue is that the build server and deployment server for each of my sites are... different. There could be lag, and I could potentially trigger the thombruce.com rebuild too early. So I still need to figure out where to place this logic precisely and how I go about that."}]},{type:a,value:f},{type:b,tag:S,props:{id:fv},children:[{type:b,tag:o,props:{href:"#hosted-marmalade-and-dynamite-cms",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:fw}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Everything mentioned so far depends almost exclusively on Nuxt, TNT and their dependencies. Nuxt is great, and I love what I've put together with TNT, but what's missing here is the backend. I'm using Nuxt as a static site generator, so it's building websites by reading Markdown documents and inserting those into HTML templates that go up to a server and can be served as-is to any visitor. But this severely limits things like interactivity, storage and broader functionality. Plus... I'm writing these blog posts in a code editor right now; the formatting is readable but it isn't pretty, and it doesn't even try to approximate what it will look like to a website visitor - it's plain text. In fact the ways in which I'm managing all of these websites, including their domains, DNS resolution, hosting and building... It's all... disconnected. There's more that I want to do there, and there's more that I want to do in general than Nuxt alone can achieve."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"For example, "},{type:b,tag:q,props:{},children:[{type:a,value:fm}]},{type:a,value:" is a concept I'm planning for a web management dashboard that would integrate all of these systems and more into one dashboard from which I could see an overview of details for all of my websites. "},{type:b,tag:q,props:{},children:[{type:a,value:fn}]},{type:a,value:" would be a content management system that would pretty up these blog posts at the time of my writing them, offering me and other users a more familiar writing experience. And "},{type:b,tag:q,props:{},children:[{type:a,value:dh}]},{type:a,value:".... "},{type:b,tag:q,props:{},children:[{type:a,value:dh}]},{type:a,value:" is an old project I'm still very interested in revisiting; it would be a personal and business management dashboard, integrating much of what you might need to keep both aspects of your life, businesses and brands in order. All of these require backends that either store critical data, or communicate with third party services securely. And for that... for the past ten years... for that I've used Ruby."}]},{type:a,value:f},{type:b,tag:bT,props:{id:fx},children:[{type:b,tag:o,props:{href:"#returning-to-ruby-playing-nicely-with-nuxt",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:fy}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So Ruby, or more specifically Ruby on Rails, is a web framework that I started using about a decade ago. In the past few years, I've been writing code for it in only a professional capacity as my more personal interests diverged into static site generation and Nuxt, but... I think it's the backend I do want to return to. I love Ruby. But I also love my new approach to the frontend. The question is, and it's a big unanswered one for me... can I get Nuxt and Ruby to play nicely."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Preferably, I would have a single repo per project that has both frontend and backend applications which can - but don't necessarily have to - run on the same server with a single click deploy. Getting them to work on different servers is trivial; but what about the same one? At deploy time, Ruby needs to run some asset precompilation, database migrations and then it runs a full application on a server, performing computations for every visitor. Nuxt, meanwhile, needs to build at deploy time and then it can be served either rendered on server by Node.js (I think) or as static JavaScript files injected into HTML documents. So there are some choices there and questions about what's even possible... All of it is, technically, possible. But if we're strictly aiming for a single-click deploy, for ease of other users installing this themselves, then we may run into issues. Can one of the hosting platforms offering such deploys handle my demands here? Can both of the ones I'm currently using (Heroku and Railway) do so? I don't know. It remains to be seen, but I'm itching to get started on these projects so I will visit that idea again real soon."}]},{type:a,value:f},{type:b,tag:S,props:{id:fz},children:[{type:b,tag:o,props:{href:"#project-dashboard",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:fA}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Finally, much as with my blogging, not everything I want to do or want to show off really fits in any existing project, but I also don't want to necessarily start some new project either. I have this idea to host a sort of... dashboard of widgets showing off various web development knowledge I already have or will obtain in one place. A dumping ground, essentially, for random code like... here's a clock, here's a weather forecast, here's a map and here's a 3D model of the moon, or whatever. Maybe I'll call it \"snippets\" and try to make the code snippets as easily viewed as the actual results as well. We'll see. It's on the back burner for now, but I'm interested in throwing it together quickly using Nuxt and TNT; we'll see if it too needs a Ruby API for a backend... or, in fact, several, dependent on the type of data each concept needs."}]},{type:a,value:f},{type:b,tag:S,props:{id:fB},children:[{type:b,tag:o,props:{href:"#the-future-refining-my-computer-science-skills-and-knowledge",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:fC}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Okay, and finally, finally... I know a whole lot about programming. I do. I've been doing this for almost ten years professionally, for practically twenty as a hobbyist and longer still if we count the little bit of programming we learned in primary school. But despite all that I do know about programming, I have forgotten a whole lot about mathematics. I was watching a Matt Parker video recently in which he calculated the distances of words as a product of the millimetre distances between keys on a keyboard. To do this, he used Pythagoras', trigonometry and a little bit of something called "},{type:b,tag:q,props:{},children:[{type:a,value:"the dot product"}]},{type:a,value:" which... I haven't even heard of. This is stuff I should know - I learned trig and Pythagoras in secondary school, and I remember a bit, like a^2 + b^2 = c^2 - that's Pythagoras - but can I remember how to apply it or make use of it? Not really."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"There are gaps in my knowledge, of mathematics, of computer science, and I should aim to plug those gaps. So I... don't know how I'll go about that yet. I am thinking of looking for a refresher mathematics course and then diving into more materials from there. But eventually... this will enable me to program a lot, lot more. Physics simulations, artificial intelligence perhaps, crypto... I've done a little crypto, I understood only half of what I did though. So a lot to cover. A lot to do. Best get started..."}]}]},dir:ah,path:"\u002Fblog\u002Fplanned-projects-and-works-in-progress",extension:ai,createdAt:O,updatedAt:O},{slug:"how-i-build-websites-2021",description:"What goes into one of my static sites in 2021.",title:"How I Build My Websites?",authors:[af],date:"2021-06-21T22:09:01.000Z",categories:[aR],tags:[aS,aq],toc:[{id:fI,depth:$,text:fJ},{id:fK,depth:$,text:fL},{id:fM,depth:$,text:fN},{id:fO,depth:$,text:fP},{id:fQ,depth:$,text:fR}],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:a,value:"For the past... I don't actually know how many years, I have been trying to pursue a certain ideal of "},{type:b,tag:q,props:{},children:[{type:a,value:"Convention over Configuration"}]},{type:a,value:". This is the web development philosophy that advocates for having a sort of set of best practices that are repeatable, reproducible, and that emphasise essentially... lazy programming. I am a lazy programmer. It's a good thing, actually. The thing about lazy programmers is not that we're \"lazy\" in the classical sense. We actually work very hard in the present in order to reduce work in the future thanks to having a set of reproducible tools, packages and practises. "},{type:b,tag:q,props:{},children:[{type:a,value:"Conventions"}]},{type:a,value:", that is, that simply drop-in and require little to know "},{type:b,tag:q,props:{},children:[{type:a,value:"configuration"}]},{type:a,value:". As I say, I've been at this for I don't know how many years so it's an ideal that's always changing, my conventions are always evolving. Lately I've been pursuing this on the "},{type:b,tag:bW,props:{to:"\u002Fcategories\u002Fjamstack"},children:[{type:a,value:aR}]},{type:a,value:", and in particular in Nuxt.js."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Before I divert to far off the course here, the reason I'm writing this blog post is to explore - step by step - the conventions I've now established for myself as a Nuxt.js developer. I want to do that by detailing below the process as I actually put another site live, from scratch. So I'm going to start with no website, and by the end of this article have a brand new website live on the internet. It won't take very long, because I'm very confident in these conventions I've established. Along the way, I may add a little commentary about improving this process or about where I want to change things in the future. Okay, let's begin. The website I'm going to be building is just called 'Screenplays', and it is essentially just a blogging website like this one, except that it will be built to specifically host some screenplays I wrote back in university. Here we go..."}]},{type:a,value:f},{type:b,tag:S,props:{id:fI},children:[{type:b,tag:o,props:{href:"#creating-the-project",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:fJ}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"First up, I'm running what has become a standard for creating Nuxt apps. "},{type:b,tag:h,props:{},children:[{type:a,value:"yarn create"}]},{type:a,value:" accepts a template argument - "},{type:b,tag:h,props:{},children:[{type:a,value:"nuxt-app"}]},{type:a,value:" in this case - and a name for the project which is going to be "},{type:b,tag:h,props:{},children:[{type:a,value:"screenplays"}]},{type:a,value:v}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn create nuxt-app screenplays\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"This runs an interactive process, meaning it will ask me a few questions about the setup and what features I desire:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"Project name: screenplays\nProgramming language: JavaScript\nPackage manager: Yarn\nUI Framework: None\nNuxt.js modules: Axios, Progressive Web App, Content\nLinting tools: None\nTesting framework: None\nRendering mode: Universal\nDeployment target: Static\nDevelopment tools: jsconfig.json, Dependabot\nVersion control system: Git\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Key to my setup, I've selected no UI framework, the universal rendering mode and the static deployment target."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The universal rendering mode essentially says \"this Nuxt app should be built as if it is to be rendered by a server\", but that's not actually the case (I'm oversimplifying); the static deployment target effectively adds to that \"and the server rendering it is the build process\". The result of those arguments is that this builds and generates a \"static site\", which is a set of HTML files not actually requiring a server to deploy for public visitation."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The reason I've selected no UI framework isn't actually because none of them interest me - in fact, one of the listed options is Tailwind CSS, which I will be using - but that I've configured everything I would like from a UI framework in a package of my own that I will install momentarily."}]},{type:a,value:f},{type:b,tag:S,props:{id:fK},children:[{type:b,tag:o,props:{href:"#style-and-structure",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:fL}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The default Nuxt template, even without a style framework, comes with some pages and components that I'll just want to delete. These are:"}]},{type:a,value:f},{type:b,tag:as,props:{},children:[{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"components\u002FLogo.vue"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"content\u002Fhello.md"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"layouts\u002Fdefault.vue"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"pages\u002Findex.vue"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"I should delete or replace some stuff in the static directory too, but this is a process in progress."}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Next, I'll add my own package, TNT (it doesn't really stand for anything but is derived from the idea that it's "},{type:b,tag:q,props:{},children:[{type:a,value:fD}]},{type:a,value:fS}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn add https:\u002F\u002Fgithub.com\u002Fthombruce\u002Fnuxt-tnt --dev\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"And I'll install the module by registering it as a buildModule in nuxt.config.js:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:c,props:{className:[br]},children:[{type:a,value:cg}]},{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:a,value:di},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:fT}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"This installs some custom components, all registered and globally available, it installs Tailwind CSS with a default configuration setup to my liking, it even registers a couple of custom layouts (which is why I was able to delete the default layout above). The one thing it does not install that I wish it did is a set of default pages. This isn't currently possible in Nuxt, but should be in Nuxt version 3 which is currently in active development."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So, rather than write my own pages, I copy them across from one of my existing projects. In this case, I've copied them from this website into my project. They're specifically designed to be reusable like this. By default they are:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"pages\n├── _taxonomy\n│   └── _term.vue\n├── blog\n│   ├── _slug.vue\n│   └── index.vue\n├── _page.vue\n└── index.vue\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:fU}]},{type:a,value:aP},{type:b,tag:h,props:{},children:[{type:a,value:"_taxonomy"}]},{type:a,value:" are pretty special. "},{type:b,tag:h,props:{},children:[{type:a,value:fU}]},{type:a,value:" is polymorphic and will act like page with a dynamic slug at the root of the site "},{type:b,tag:q,props:{},children:[{type:a,value:"or"}]},{type:a,value:" as a taxonomy index; the taxonomy slug can also be dynamic. This saves me having to create very similar pages for tags, categories, series... that kind of thing. In the case of my screenplays project, I don't actually want the blog pages, so I'll rename that directory to 'screenplays' and replace the two occurrences of the word 'blog' in those files with that as well. Those two occurrences actually pertain to the content directory, so with that change made..."}]},{type:a,value:f},{type:b,tag:S,props:{id:fM},children:[{type:b,tag:o,props:{href:"#adding-my-content",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:fN}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Like I said, this is a site for some screenplays I wrote back in university. Back then I used Final Draft and Celtx, two leading script writing platforms with proprietary formats where that format is also... binary. But I've converted all of them to the open source Fountain format more recently, which is a text file format like Markdown (based on Markdown in fact). I've also written another package specifically for handling that file format in Nuxt Content, so I'm just going to copy those files into "},{type:b,tag:h,props:{},children:[{type:a,value:"content\u002Fscreenplays"}]},{type:a,value:" and install my "},{type:b,tag:h,props:{},children:[{type:a,value:"vue-fountain"}]},{type:a,value:" package:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn add @thombruce\u002Fvue-fountain --dev\n"}]}]}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:c,props:{className:[br]},children:[{type:a,value:cg}]},{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:a,value:di},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:fT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'@thombruce\u002Fvue-fountain\u002Fnuxt'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"This is an extra step I wouldn't normally have to take if it were a standard, markdown-based static blogging site, but it is a step I do take here for my screenplays. But in fact... that's it."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Now having those content files in place, I can navigate to them when I boot up the dev site with "},{type:b,tag:h,props:{},children:[{type:a,value:"yarn dev"}]},{type:a,value:". Those pages are generated and exist. If it were a more straightforward blogging site, I'd just create Markdown files and be rolling."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"This site is ready to deploy!"}]},{type:a,value:f},{type:b,tag:S,props:{id:fO},children:[{type:b,tag:o,props:{href:"#ready-for-launch",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:fP}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I could at this point simply run "},{type:b,tag:h,props:{},children:[{type:a,value:"yarn generate"}]},{type:a,value:", which would build my website and put all of the files I need into a "},{type:b,tag:h,props:{},children:[{type:a,value:bY}]},{type:a,value:" folder. Then I could drag and drop that directory into a hosting service like Netlify.com and "},{type:b,tag:q,props:{},children:[{type:a,value:"just like that"}]},{type:a,value:" my site would be live. But I want a couple of extra things. In consideration of hosting a website, I want:"}]},{type:a,value:f},{type:b,tag:as,props:{},children:[{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Source control"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Continuous integration"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:dj}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The hosting part we've just discussed. I will in fact be using Netlify, but I won't be dragging and dropping the dist folder into their deploy window. In order to achieve the criteria of a source controlled site with continuous integration, I'll also be using GitHub and GitHub Actions. Those familiar with Netlify might ask, "},{type:b,tag:q,props:{},children:[{type:a,value:"why GitHub Actions instead of Netlify's automated deployments?"}]},{type:a,value:" A fair question. I would in fact prefer to use Netlify's automated deployments, because their service is fantastic, but I want to benefit from GitHub's unlimited free build minutes for open source projects."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"To achieve this, I need a GitHub Actions Workflow for which I again have a standard template that I'll copy and paste:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:c,props:{className:[br]},children:[{type:a,value:".github\u002Fworkflows\u002Fdeploy.yml"}]},{type:b,tag:m,props:{className:[n,"language-yml"]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" deploy\n\n"},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"on"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:fV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"branches"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:" main\n\n"},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"jobs"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"deploy"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"runs-on"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:cB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:" matrix.os "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:cU},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"strategy"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"matrix"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"os"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:"ubuntu"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:"latest"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"node"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,fW]},children:[{type:a,value:"14"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:cU},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"steps"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" Checkout\n        "},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:cC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" actions\u002Fcheckout@master\n      "},{type:b,tag:c,props:{className:[d,ax]},children:[{type:a,value:"# https:\u002F\u002Fgithub.com\u002Factions\u002Fcheckout\u002Fissues\u002F165#issuecomment-657673315"}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" Create LFS file list\n        "},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:cD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" git lfs ls"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:"files "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:"l "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:" cut "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:"d' ' "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:"f1 "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:" sort "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:a,value:" .lfs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:fX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:"id\n      "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" Restore LFS cache\n        "},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:cC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" actions\u002Fcache@v2\n        "},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:eF}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" lfs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:"cache\n        "},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:dk}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"path"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" .git\u002Flfs\n          "},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:cB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:" runner.os "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:"lfs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:bz},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:" hashFiles('.lfs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:fX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:"id') "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:"v1\n      "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" Git LFS Pull\n        "},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:cD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" git lfs pull\n\n      "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" Setup node env\n        "},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:cC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" actions\u002Fsetup"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:"node@v2.1.2\n        "},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:dk}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"node-version"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:cB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:" matrix.node "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:"\n\n      "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" Install dependencies\n        "},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:cD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" yarn\n\n      "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" Generate\n        "},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:cD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" yarn run generate\n\n      "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" Deploy\n        "},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:cC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" peaceiris\u002Factions"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:"gh"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:"pages@v3\n        "},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:dk}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"github_token"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:cB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:" secrets.GITHUB_TOKEN "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"publish_branch"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" dist\n          "},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"publish_dir"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" .\u002Fdist\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Now, when I push to GitHub, this workflow will build the site and commit the result to a separate branch called "},{type:b,tag:h,props:{},children:[{type:a,value:bY}]},{type:a,value:v}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"At this point I can create a new repository on GitHub and:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"git add . && git commit -m \"Ready to launch!\"\ngit remote add origin https:\u002F\u002Fgithub.com\u002Fthombruce\u002Fscreenplays.git\ngit push -u origin main\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"When the workflow is complete, I can create a new site on Netlify linked to the repo and publish straight from the "},{type:b,tag:h,props:{},children:[{type:a,value:bY}]},{type:a,value:" branch."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Done!"}]},{type:a,value:f},{type:b,tag:S,props:{id:fQ},children:[{type:b,tag:o,props:{href:"#wrapping-up",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:fR}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Okay, so if I weren't also typing this up this process would have taken me what... about twenty minutes? No more, certainly. That's largely thanks to having so much of my personal configuration written into my TNT module for reuse. There are some problems and some things I left out. For instance... I've also had to add a "},{type:b,tag:h,props:{},children:[{type:a,value:"tnt.config.js"}]},{type:a,value:" file and slightly modify "},{type:b,tag:h,props:{},children:[{type:a,value:cg}]},{type:a,value:" to import it; ideally TNT would handle that import itself, and even more ideally it would have some fallback configuration that would be used if the file didn't exist. That's a chore for me yet to take on, but shouldn't be too tricky, hence I left it out of my write-up because I don't know that it will remain relevant for long. I've also had to do some other specific customisations that were specific to this site handling screenplays; those aren't typically relevant to a site build, so I omitted them. I also still need to install Git LFS - something I typically do to handle things like image files - and do some of my own style customisations for the site, mainly by adding a "},{type:b,tag:h,props:{},children:[{type:a,value:cf}]},{type:a,value:" file and modifying some configuration there."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"As I mentioned when copying across page templates, a Nuxt module like TNT cannot currently offer a set of custom pages but this is supposed to become possible with Nuxt 3. Strictly it is achievable by injecting some custom routes... but this doesn't result with an easily overwritable behaviour. That's one of the perks of TNT - any of its components can be overwritten simply by creating your own component existing at the same path in your project directory. I want that for pages too, and so I'm eagerly awaiting Nuxt 3 at which point I think I'll be able to \"finish\" TNT to my liking and maybe make it more useful to others too."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"In less than the time it took me to write those two paragraphs of wrapping up, my GitHub workflow was complete so I have:"}]},{type:a,value:f},{type:b,tag:cd,props:{},children:[{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Created a site on Netlify from the "},{type:b,tag:h,props:{},children:[{type:a,value:bY}]},{type:a,value:" branch of my GitHub repo"}]},{type:a,value:f},{type:b,tag:z,props:{},children:[{type:a,value:"Added a custom domain to my DNS records pointing at that site"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"This took less than a minute. It'll take a little longer for the DNS to propagate and for Netlify to provision an SSL certificate, though this is typically pretty quick too. By the time anyone reads this, the site should be available at "},{type:b,tag:o,props:{href:fG,rel:[D,E,F],target:G},children:[{type:a,value:"ink.thombruce.com"}]},{type:a,value:v}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"That's a basic blogging website done in under twenty minutes. The template has a minimalist kinda style which I still need to work on (I'm more developer than designer), and there are some other kinks to work out yet too, but that's... that's it. I have this process down to a tee. This is what proactive laziness looks like. 😅"}]}]},dir:ah,path:"\u002Fblog\u002Fhow-i-build-websites-2021",extension:ai,createdAt:O,updatedAt:O},{slug:dl,description:"A brief introduction to the Jamstack.",title:dm,authors:[af],date:"2021-06-06T00:41:11.000Z",categories:[aR],tags:["JavaScript","API","Markup"],toc:[{id:dl,depth:$,text:dm},{id:fY,depth:$,text:fZ},{id:f_,depth:$,text:f$}],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"UPDATE: This post was originally written when I called this site Jameater and dedicated it to the Jamstack. I've since decided to broaden the subject material of this website to include all of my programming work, a lot of it but not all being Jamstack related."}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Greetings curious parties and welcome to Jameater. I'm Thom Bruce, the author of this here blog and an ever-greater-and-greater advocate of the Jamstack. But what is the Jamstack, what's a Jameater and why am I writing about this? Well..."}]},{type:a,value:f},{type:b,tag:S,props:{id:dl},children:[{type:b,tag:o,props:{href:"#what-is-the-jamstack",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:dm}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The Jamstack (also stylised as JAMStack) is an approach to website architecture that emphasises the use of JavaScript, server-based APIs and markup, hence the name: "},{type:b,tag:ay,props:{},children:[{type:a,value:"J"}]},{type:a,value:"avaScript + "},{type:b,tag:ay,props:{},children:[{type:a,value:"A"}]},{type:a,value:"PI + "},{type:b,tag:ay,props:{},children:[{type:a,value:"M"}]},{type:a,value:"arkup = "},{type:b,tag:ay,props:{},children:[{type:a,value:"JAM"}]},{type:a,value:"Stack. Not every Jamstack website uses all three, but in principle all three are all a Jamstack website would ever use. To illustrate, let's consider "},{type:b,tag:q,props:{},children:[{type:a,value:cE}]},{type:a,value:v}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"\"Baby's first website\""}]},{type:a,value:" is that first website that every web designer and developer ever produces. I threw my first website together when I was 11 with a "},{type:b,tag:q,props:{},children:[{type:a,value:"teach yourself HTML"}]},{type:a,value:" book I'd picked up at a Scholastic Book Fair. It didn't actually use any JavaScript, and it certainly didn't use any APIs, but I would make the case that this - a site comprised of purely HTML markup and a bit of CSS - was a Jamstack website. Which kinda means... the 'M' in 'JAMStack' is sort of... "},{type:b,tag:q,props:{},children:[{type:a,value:"the old way"}]},{type:a,value:" of doing websites. Most modern websites generate their HTML on a server using back-end code; this is how WordPress works, how Drupal and Joomla work, it's how Ruby on Rails works. It's... "},{type:b,tag:q,props:{},children:[{type:a,value:"the modern approach"}]},{type:a,value:". But a lot of the time, this "},{type:b,tag:q,props:{},children:[{type:a,value:"modern approach"}]},{type:a,value:" is unnecessary. A lot of sites that are running from servers, don't actually need those servers; they could be built on the Jamstack."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So, how does this work? Well you take "},{type:b,tag:q,props:{},children:[{type:a,value:cE}]},{type:a,value:", for example, and you decide you want to add a little user interactivity - let them change the colours, say, or add a comment or a like. The way to do that without having a server to compute the change is to do it right in the user's browser; for that, we use JavaScript. JavaScript is a programming language understood by browsers, making it actually the most commonly used programming language in the world. It doesn't matter if your website is written on the backend in Ruby or PHP, or put together in WordPress, or it's just "},{type:b,tag:q,props:{},children:[{type:a,value:cE}]},{type:a,value:" made of pure markup, JavaScript adds that frontend interaction that we've all grown accustomed to. "},{type:b,tag:q,props:{},children:[{type:a,value:"I should caveat this: A lot of interactivity can also be achieved with CSS alone, and where that's the case it usually should be, but JavaScript allows for plenty more advanced use cases."}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"And finally, there's the A in JAM - APIs. Because you don't need to run "},{type:b,tag:q,props:{},children:[{type:a,value:cE}]},{type:a,value:" on a server just to be able to add comments or likes to "},{type:b,tag:q,props:{},children:[{type:a,value:"baby's"}]},{type:a,value:" posts. You just need access to a smaller, more dedicated server that handles user interactions. So you take the markup you've already got (which you can serve online without a server), you add a little JavaScript that says \"when the user hits this button, send this information\", and you send that information to an API that is dedicated to handling that sort of information. Et voila, "},{type:b,tag:q,props:{},children:[{type:a,value:"baby"}]},{type:a,value:" just deployed to the full Jamstack!"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I'll discuss further concepts in later posts, like Static Site Generators are a pretty important concept; instead of writing page after page of HTML markup, an SSG will build the markup for your pages for you from templates and components that you customise. An SSG does a lot of the stuff that a WordPress server would to render a page, but whereas WordPress would go through this process on every single user request, an SSG only does this once. You build once and deploy to a serverless architecture, serving up what's known as a "},{type:b,tag:q,props:{},children:[{type:a,value:"\"static site\""}]},{type:a,value:". These static sites become dynamic by use of JavaScript and APIs, but that's... precisely the same way that all websites feel modern and dynamic. Can you imagine if Facebook loaded a new page every time you wanted to leave a \"like\" on something? That's interactivity without JavaScript and APIs; it's page-loads, yeuch!"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"A quick and easy way to get started with Static Site Generators, if you're interested, is "},{type:b,tag:o,props:{href:"https:\u002F\u002Fjekyllrb.com\u002F",rel:[D,E,F],target:G},children:[{type:a,value:"Jekyll"}]},{type:a,value:". I no longer use this myself (this blog uses "},{type:b,tag:o,props:{href:ch,rel:[D,E,F],target:G},children:[{type:a,value:aS}]},{type:a,value:"), but I do think Jekyll wins out for ease-of-use."}]},{type:a,value:f},{type:b,tag:S,props:{id:fY},children:[{type:b,tag:o,props:{href:"#what-is-a-jameater",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:fZ}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"A derogatory term for someone from either one of two local towns, Whitehaven or Workington, who eats jam sandwiches (jelly sandwiches, if you're American). I'm "},{type:b,tag:o,props:{href:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FWhitehaven#%22Jam_eater%22",rel:[D,E,F],target:G},children:[{type:a,value:"not joking"}]},{type:a,value:". Anyway, I'm 'aving it for my Jamstack blog. I'm a proud Jameater, dammit!"}]},{type:a,value:f},{type:b,tag:S,props:{id:f_},children:[{type:b,tag:o,props:{href:"#why-write-this",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:f$}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Can't answer right now; crying into my raspberry jam sandwich."}]},{type:a,value:" 😭"}]}]},dir:ah,path:"\u002Fblog\u002Fwhat-is-the-jamstack",extension:ai,createdAt:O,updatedAt:O},{slug:"my-first-nuxt-module",description:"My first Vue plugin that integrates seamlessly as a Nuxt module.",title:"My First Nuxt Module",authors:[af],date:"2021-05-23T01:06:56.000Z",categories:[aR],series:[bs],tags:[bg,aS],toc:[],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:a,value:"In putting my blog together, and porting some old code to this new ecosystem, I began to create a... well not overly but still a bit of a cluttered project. I brought over some code for parsing screenplays and rewrote some old code for displaying different kinds of clock - a project I originally wrote in Ruby on Rails almost a decade ago. The obvious thing I still needed to do was to clean this up by creating my own Nuxt modules."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Problem: Creating a Nuxt module isn't super well documented just yet. I found "},{type:b,tag:o,props:{href:"https:\u002F\u002Fnuxtjs.org\u002Fblog\u002Fimprove-your-developer-experience-with-nuxt-components\u002F#third-party-component-library",rel:[D,E,F],target:G},children:[{type:a,value:"this entry on the official Nuxt.js blog"}]},{type:a,value:aP},{type:b,tag:o,props:{href:"https:\u002F\u002Fgithub.com\u002FKrutie\u002FKru-Components",rel:[D,E,F],target:G},children:[{type:a,value:"this example project"}]},{type:a,value:" which it links to. The actual part about developing a third party module and the example project, however, are towards the bottom of the blog entry. It's otherwise mostly just about Nuxt components and how to use those in your project. Still, it was the guide I needed. So, how did I create my first (and second) Nuxt module? Well..."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"First, I made the directory for my project ("},{type:b,tag:h,props:{},children:[{type:a,value:"mkdir"}]},{type:a,value:"), changed directory into it ("},{type:b,tag:h,props:{},children:[{type:a,value:"cd"}]},{type:a,value:"), initialised it as a Git repository ("},{type:b,tag:h,props:{},children:[{type:a,value:"git init"}]},{type:a,value:") and as a JavaScript package ("},{type:b,tag:h,props:{},children:[{type:a,value:ga}]},{type:a,value:fS}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"mkdir vue-timepiece\ncd vue-timepiece\ngit init\nyarn init\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:ga}]},{type:a,value:" is an interactive process, asking for the name, version and some other details about the package being created. The result is to create a "},{type:b,tag:h,props:{},children:[{type:a,value:bf}]},{type:a,value:" with those values. "},{type:b,tag:q,props:{},children:[{type:a,value:"Why am I explaining this in so much detail? This isn't a 'My First JavaScript Package' post..."}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Anyway, next I moved my existing Vue components across from my Nuxt project to this new directory, placing them in the "},{type:b,tag:h,props:{},children:[{type:a,value:"src\u002Fcomponents"}]},{type:a,value:" directory. Nothing special about that, the components did not change in the transfer; they're just in a new folder in a different project."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Now, I could stop there. I could push that up to the NPM package registry, install it in my Nuxt project and manually "},{type:b,tag:h,props:{},children:[{type:a,value:ad}]},{type:a,value:" my components as one might in a standard Vue project. But Nuxt offers us a little magic, yet."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I added a file specifically for use by Nuxt at "},{type:b,tag:h,props:{},children:[{type:a,value:gb}]},{type:a,value:" that extends the global components option so that I can use my components anywhere without having to import them."}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:c,props:{className:[br]},children:[{type:a,value:gb}]},{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aH]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:" join "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:av}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:eI}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:bw}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:bx}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:B}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:bP}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:" nuxt "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:ci}]},{type:a,value:gc},{type:b,tag:c,props:{className:[d,ax]},children:[{type:a,value:"\u002F\u002F Make sure components is enabled"}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,A,cN]},children:[{type:a,value:cO}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:dV}]},{type:a,value:bZ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:dW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"components"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,A,cN]},children:[{type:a,value:"throw"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:cy}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,cz]},children:[{type:a,value:"Error"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'please set `components: true` inside `nuxt.config` and ensure using `nuxt \u003E= 2.13.0`'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:gc},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:ci}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:bZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:"hook"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"components:dirs\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,bi]},children:[{type:a,value:"dirs"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bL,p]},children:[{type:a,value:bM}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,ax]},children:[{type:a,value:"\u002F\u002F Add .\u002Fcomponents dir to the list"}]},{type:a,value:"\n    dirs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:fV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n      path"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:"join"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:eL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"..\u002Fsrc\u002Fcomponents\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n      prefix"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"\"timepiece\""}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"This has the added benefit of working seamlessly with the Nuxt Content module so I can use my Timepiece components directly from inside the Markdown of my blog posts, like this:"}]},{type:a,value:f},{type:b,tag:k,props:{className:["w-min","mx-auto","my-5"]},children:[{type:a,value:t},{type:b,tag:dn,props:{},children:[]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"It's this easy:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aJ]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:dn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:dn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Nuxt modules and the "},{type:b,tag:h,props:{},children:[{type:a,value:"components:dirs"}]},{type:a,value:" hook are like magic! In fact, I've already gone ahead and ported my screenplay parser over to a Nuxt module too, so I can also share formatted screenplay snippets like this one:"}]},{type:a,value:f},{type:b,tag:"fountain-screenplay",props:{},children:[{type:a,value:f},{type:b,tag:"template",props:{},children:[],content:[{type:a,value:"\nINT. MUSIC ROOM - EVENING\n"},{type:b,tag:g,props:{},children:[{type:a,value:"CASSANDRA (CONT'D)\n(sign language)\nWhat are we going to do?"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"David pulls a leaf of paper from his pocket."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"He flattens it out onto the music sheet holder of the piano."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"DAVID\n(sign language)\nBen's work. He's a little genius."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Ben's drawing displays David sketching and Cassandra playing the piano."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"DAVID (CONT'D)\n(sign language)\nWe'll put on a proper show for you.\n"}]}]},{type:a,value:f}]},{type:b,tag:g,props:{},children:[]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"It's like magic, I tells ya!"}]}]},dir:ah,path:"\u002Fblog\u002Fmy-first-nuxt-module",extension:ai,createdAt:O,updatedAt:O},{slug:"charting-it-out",description:"Adding charts to my Markdown documents",title:"Charting it Out",authors:[af],date:"2021-05-21T15:56:42.000Z",updatedAt:"2021-05-28T18:08:33.000Z",categories:[aR],series:[bs],tags:[aS,bB,"Charts"],toc:[],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:a,value:"Following on from adding KaTeX math support and exploring the capabilities of Markdown in my previous post, I realised a big omission from the tools I might like to employ is charts. I've worked with charts before using a number of different libraries. My favourite, simply because it appears to be the most powerful and flexible, is "},{type:b,tag:o,props:{href:"https:\u002F\u002Fd3js.org\u002F",rel:[D,E,F],target:G},children:[{type:a,value:"D3.js"}]},{type:a,value:". Unfortunately, because it is so powerful and flexible, it is not easy to drop in and use straight away - I would need to do a lot of custom configuration. So, as a simpler measure for the time being, I've opted to install the beautiful little "},{type:b,tag:o,props:{href:"https:\u002F\u002Fwww.chartjs.org\u002F",rel:[D,E,F],target:G},children:[{type:a,value:"Chart.js"}]},{type:a,value:" library."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:ay,props:{},children:[{type:a,value:"Installation:"}]}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn add vue-chartjs chart.js@2.9.4\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:ay,props:{},children:[{type:a,value:"Component:"}]}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:c,props:{className:[br]},children:[{type:a,value:"BarChart.vue"}]},{type:b,tag:m,props:{className:[n,bR]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:bU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:b,tag:c,props:{className:[d,bU]},children:[{type:b,tag:c,props:{className:[d,e_]},children:[{type:a,value:f},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aH]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:gd}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:av}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'vue-chartjs'"}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:bw}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:bx}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"extends"}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,Y]},children:[{type:a,value:gd}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n  props"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'labels'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'datasets'"}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:"mounted"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:ci}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,P,B,H]},children:[{type:a,value:"renderChart"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n      labels"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:ci}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"labels"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n      datasets"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:ci}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"datasets"}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:bU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:ay,props:{},children:[{type:a,value:"Usage:"}]}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aJ]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:ge}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:":labels"}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:":datasets"}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]},{type:a,value:do0},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:ge}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"That's a simple, drop-in and start using solution to a problem I don't need to give a lot of consideration just yet."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The library is lacking in some advanced features, but many of these can be added through plugins - I'm just not really sure how to go about that using the Vue package yet. I also think I could clean up the manner in which I pass data to the component - it could be simplified, more intuitive. Chart.js may need the data in this format, but I can simplify the props required for end users; one big thing I may add is a series of default colours that are selected automatically. But for now, this will do."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Using this library, I now have access to the following charts, and could expand a little on this list in the future:"}]},{type:a,value:f},{type:b,tag:k,props:{className:["flex","flex-wrap"]},children:[{type:a,value:t},{type:b,tag:k,props:{className:[bc,bd,be]},children:[{type:a,value:t},{type:b,tag:S,props:{},children:[{type:a,value:"Bar Chart"}]},{type:a,value:f},{type:b,tag:"playfair-bar-chart",props:{":labels":bt,":datasets":do0},children:[{type:a,value:f}]},{type:a,value:t}]},{type:a,value:t},{type:b,tag:k,props:{className:[bc,bd,be]},children:[{type:a,value:t},{type:b,tag:S,props:{},children:[{type:a,value:"Horizontal Bar Chart"}]},{type:a,value:f},{type:b,tag:"playfair-horizontal-bar-chart",props:{":labels":bt,":datasets":do0},children:[{type:a,value:f}]},{type:a,value:t}]},{type:a,value:t},{type:b,tag:k,props:{className:[bc,bd,be]},children:[{type:a,value:t},{type:b,tag:S,props:{},children:[{type:a,value:"Line Chart"}]},{type:a,value:f},{type:b,tag:"playfair-line-chart",props:{":labels":bt,":datasets":"[{ label: `Data`, borderColor: `rgba(59, 130, 246, 1)`, backgroundColor: `rgba(59, 130, 246, .25)`, fill: true, data: [40, 20, 12] }]"},children:[{type:a,value:f}]},{type:a,value:t}]},{type:a,value:t},{type:b,tag:k,props:{className:[bc,bd,be]},children:[{type:a,value:t},{type:b,tag:S,props:{},children:[{type:a,value:"Pie Chart"}]},{type:a,value:f},{type:b,tag:"playfair-pie-chart",props:{":labels":bt,":datasets":gf},children:[{type:a,value:f}]},{type:a,value:t}]},{type:a,value:t},{type:b,tag:k,props:{className:[bc,bd,be]},children:[{type:a,value:t},{type:b,tag:S,props:{},children:[{type:a,value:"Doughnut Chart"}]},{type:a,value:f},{type:b,tag:"playfair-doughnut-chart",props:{":labels":bt,":datasets":gf},children:[{type:a,value:f}]},{type:a,value:t}]},{type:a,value:t},{type:b,tag:k,props:{className:[bc,bd,be]},children:[{type:a,value:t},{type:b,tag:S,props:{},children:[{type:a,value:"Polar Area Chart"}]},{type:a,value:f},{type:b,tag:"playfair-polar-area-chart",props:{":labels":bt,":datasets":"[{ label: `Data`, borderColor: [`rgba(239, 67, 68, 1)`, `rgba(39, 185, 129, 1)`, `rgba(59, 130, 246, 1)`], backgroundColor: [`rgba(239, 67, 68, .25)`, `rgba(39, 185, 129, .25)`, `rgba(59, 130, 246, .25)`], data: [40, 20, 12] }]"},children:[{type:a,value:f}]},{type:a,value:t}]},{type:a,value:t},{type:b,tag:k,props:{className:[bc,bd,be]},children:[{type:a,value:t},{type:b,tag:S,props:{},children:[{type:a,value:"Radar Chart"}]},{type:a,value:f},{type:b,tag:"playfair-radar-chart",props:{":labels":bt,":datasets":"[{ label: `Data`, borderColor: `rgba(59, 130, 246, 1)`, backgroundColor: `rgba(59, 130, 246, .25)`, data: [40, 20, 12] }]"},children:[{type:a,value:f}]},{type:a,value:t}]},{type:a,value:t},{type:b,tag:k,props:{className:[bc,bd,be]},children:[{type:a,value:t},{type:b,tag:S,props:{},children:[{type:a,value:"Scatter Chart"}]},{type:a,value:f},{type:b,tag:"playfair-scatter-chart",props:{":datasets":"[{ label: `Data`, backgroundColor: `#EF4444`, data: [{ x: 20, y: 30 }, { x: 40, y: 10 }] }, { label: `Data2`, backgroundColor: `#3B82F6`, data: [{ x: 35, y: 15 }] }]"},children:[{type:a,value:f}]},{type:a,value:t}]},{type:a,value:t},{type:b,tag:k,props:{className:[bc,bd,be]},children:[{type:a,value:t},{type:b,tag:S,props:{},children:[{type:a,value:"Bubble Chart"}]},{type:a,value:f},{type:b,tag:"playfair-bubble-chart",props:{":datasets":"[{ label: `Data`, borderColor: `rgba(239, 67, 68, 1)`, backgroundColor: `rgba(239, 67, 68, .25)`, data: [{ x: 20, y: 30, r: 20 }, { x: 40, y: 10, r: 10 }] }, { label: `Data2`, borderColor: `rgba(59, 130, 246, 1)`, backgroundColor: `rgba(59, 130, 246, .25)`, data: [{ x: 35, y: 15, r: 50 }] }]"},children:[{type:a,value:f}]},{type:a,value:t}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Update (2021-05-28): I've now packaged these charts into my own custom library, "},{type:b,tag:o,props:{href:"https:\u002F\u002Fgithub.com\u002Fthombruce\u002Fvue-playfair",rel:[D,E,F],target:G},children:[{type:a,value:"Vue Playfair"}]},{type:a,value:v}]}]}]},dir:ah,path:"\u002Fblog\u002Fcharting-it-out",extension:ai,createdAt:O},{slug:"doing-things-with-markdown",description:"Exploring and extending Markdown's capabilities",title:"Doing Things with Markdown",authors:[af],date:"2021-05-20T14:05:39.000Z",categories:[aR],series:[bs],tags:[cF,aS,bB],toc:[{id:gg,depth:$,text:gh},{id:gi,depth:$,text:gj},{id:gk,depth:$,text:dp},{id:gl,depth:$,text:gm},{id:gn,depth:$,text:go},{id:gp,depth:$,text:gq}],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"UPDATE: This blog post was originally written at ThomBruce.com, before I decided to separate and dedicate specific domains to singular subjects (code in this case). Some of the markup below is broken as a result. For instance, I do not know if I have use for KaTeX outside of this blog post so I have not installed it."}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I want to go over again what's possible with Markdown; in particular what is possible with Nuxt's markdown parser which I've learned is slightly extended, and what I would like to add myself."}]},{type:a,value:f},{type:b,tag:S,props:{id:gg},children:[{type:b,tag:o,props:{href:"#typography",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:gh}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I've mentioned "},{type:b,tag:bW,props:{to:dq},children:[{type:a,value:gr}]},{type:a,value:gs},{type:b,tag:q,props:{},children:[{type:a,value:gt}]},{type:a,value:aP},{type:b,tag:q,props:{},children:[{type:a,value:gu}]},{type:a,value:gv},{type:b,tag:ay,props:{},children:[{type:a,value:bB}]},{type:a,value:" natively in terms of typography, and what can be achieved using HTML instead. Just to recover it here, this short paragraph has made use of a title, a link, italic and bold text. It was written like this:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aJ]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,dr,aL]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"##"}]},{type:a,value:" Typography"}]},{type:a,value:"\n\nI've mentioned "},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:N},{type:b,tag:c,props:{className:[d,az]},children:[{type:a,value:gr}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:dq}]},{type:a,value:x}]},{type:a,value:gs},{type:b,tag:c,props:{className:[d,cG]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bC}]},{type:b,tag:c,props:{className:[d,az]},children:[{type:a,value:gt}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bC}]}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,cG]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bC}]},{type:b,tag:c,props:{className:[d,az]},children:[{type:a,value:gu}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bC}]}]},{type:a,value:gv},{type:b,tag:c,props:{className:[d,cj]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ck}]},{type:b,tag:c,props:{className:[d,az]},children:[{type:a,value:bB}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ck}]}]},{type:a,value:" natively in terms of typography, and what can be achieved using HTML instead. Just to recover it here, this short paragraph has made use of a title, a link, italic and bold text. It was written like this:\n"}]}]}]},{type:a,value:f},{type:b,tag:S,props:{id:gi},children:[{type:b,tag:o,props:{href:"#inline-code--code-blocks",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:gj}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Let's cover code blocks quickly since I've just shown one off. There are a few ways to write these in Markdown, but most commonly used are the three back-ticks, like so: "},{type:b,tag:h,props:{},children:[{type:a,value:"```"}]},{type:a,value:". These are placed above and below the block of code we want to enclose. The top set also accepts a language argument: "},{type:b,tag:h,props:{},children:[{type:a,value:"```js"}]},{type:a,value:". Nuxt's parser extends the standard with support for a file-name attribute too: "},{type:b,tag:h,props:{},children:[{type:a,value:"```js[myFile.js]"}]},{type:a,value:". Putting all of that together, we get a code block:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:c,props:{className:[br]},children:[{type:a,value:"myFile.js"}]},{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:ad}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aH]},children:[{type:a,value:"otherFile"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:av}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'.\u002FotherFile.js'"}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:bw}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,A,I]},children:[{type:a,value:bx}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n  hello"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'world'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:S,props:{id:gk},children:[{type:b,tag:o,props:{href:"#images",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:dp}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I've already partially discussed ways to include images in Markdown "},{type:b,tag:bW,props:{to:gw},children:[{type:a,value:gx}]},{type:a,value:". I'm still, for the time being, using the Nuxt Image component for the benefits that offers."}]},{type:a,value:f},{type:b,tag:S,props:{id:gl},children:[{type:b,tag:o,props:{href:"#tables",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:gm}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Here's a table I've just copied over from "},{type:b,tag:o,props:{href:"code\u002Fthom-bruce-com"},children:[{type:a,value:"another page"}]},{type:a,value:j}]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:gy,props:{},children:[{type:b,tag:"thead",props:{},children:[{type:b,tag:gz,props:{},children:[{type:b,tag:aT,props:{},children:[{type:a,value:"Domain"}]},{type:b,tag:aT,props:{},children:[{type:a,value:"DNS"}]},{type:b,tag:aT,props:{},children:[{type:a,value:"Framework"}]},{type:b,tag:aT,props:{},children:[{type:a,value:"Source"}]},{type:b,tag:aT,props:{},children:[{type:a,value:dj}]},{type:b,tag:aT,props:{},children:[{type:a,value:"CI\u002FCD"}]},{type:b,tag:aT,props:{},children:[{type:a,value:"Status"}]},{type:b,tag:aT,props:{},children:[{type:a,value:"Content API"}]},{type:b,tag:aT,props:{},children:[{type:a,value:"CMS"}]},{type:b,tag:aT,props:{},children:[{type:a,value:"CDN"}]},{type:b,tag:aT,props:{},children:[{type:a,value:"Comments"}]}]}]},{type:b,tag:"tbody",props:{},children:[{type:b,tag:gz,props:{},children:[{type:b,tag:aU,props:{},children:[{type:b,tag:o,props:{href:gA,rel:[D,E,F],target:G},children:[{type:a,value:ds}]}]},{type:b,tag:aU,props:{},children:[{type:b,tag:o,props:{href:gB,rel:[D,E,F],target:G},children:[{type:a,value:dt}]}]},{type:b,tag:aU,props:{},children:[{type:b,tag:o,props:{href:ch,rel:[D,E,F],target:G},children:[{type:a,value:ba}]},{type:a,value:bh},{type:b,tag:o,props:{href:gC,rel:[D,E,F],target:G},children:[{type:a,value:gD}]}]},{type:b,tag:aU,props:{},children:[{type:b,tag:o,props:{href:cH,rel:[D,E,F],target:G},children:[{type:a,value:cl}]}]},{type:b,tag:aU,props:{},children:[{type:b,tag:o,props:{href:bV,rel:[D,E,F],target:G},children:[{type:a,value:bu}]}]},{type:b,tag:aU,props:{},children:[{type:b,tag:o,props:{href:bV,rel:[D,E,F],target:G},children:[{type:a,value:bu}]}]},{type:b,tag:aU,props:{},children:[{type:b,tag:o,props:{href:du,rel:[D,E,F],target:G},children:[{type:a,value:cI}]}]},{type:b,tag:aU,props:{},children:[{type:a,value:"Static"}]},{type:b,tag:aU,props:{},children:[{type:a,value:"File System"}]},{type:b,tag:aU,props:{},children:[{type:b,tag:o,props:{href:cH,rel:[D,E,F],target:G},children:[{type:a,value:cl}]},{type:a,value:bh},{type:b,tag:o,props:{href:bV,rel:[D,E,F],target:G},children:[{type:a,value:bu}]}]},{type:b,tag:aU,props:{},children:[{type:b,tag:o,props:{href:dv,rel:[D,E,F],target:G},children:[{type:a,value:dw}]}]}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The Markdown for that looks like this:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aJ]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,gy]},children:[{type:b,tag:c,props:{className:[d,"table-header-row"]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aV,aL]},children:[{type:a,value:" Domain "}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aV,aL]},children:[{type:a,value:" DNS "}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aV,aL]},children:[{type:a,value:" Framework "}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aV,aL]},children:[{type:a,value:" Source "}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aV,aL]},children:[{type:a,value:" Hosting "}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aV,aL]},children:[{type:a,value:" CI\u002FCD "}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aV,aL]},children:[{type:a,value:" Status "}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aV,aL]},children:[{type:a,value:" Content API "}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aV,aL]},children:[{type:a,value:" CMS "}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aV,aL]},children:[{type:a,value:" CDN "}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aV,aL]},children:[{type:a,value:" Comments "}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:f}]},{type:b,tag:c,props:{className:[d,"table-line"]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aD}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:"  "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aD}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aD}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aD}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aD}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aD}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aD}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aD}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aD}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aD}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:f}]},{type:b,tag:c,props:{className:[d,"table-data-rows"]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aW]},children:[{type:a,value:i},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:N},{type:b,tag:c,props:{className:[d,az]},children:[{type:a,value:ds}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:gA}]},{type:a,value:x}]},{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aW]},children:[{type:a,value:i},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:N},{type:b,tag:c,props:{className:[d,az]},children:[{type:a,value:dt}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:gB}]},{type:a,value:x}]},{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aW]},children:[{type:a,value:i},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:N},{type:b,tag:c,props:{className:[d,az]},children:[{type:a,value:ba}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:ch}]},{type:a,value:x}]},{type:a,value:bh},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:N},{type:b,tag:c,props:{className:[d,az]},children:[{type:a,value:gD}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:gC}]},{type:a,value:x}]},{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aW]},children:[{type:a,value:i},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:N},{type:b,tag:c,props:{className:[d,az]},children:[{type:a,value:cl}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:cH}]},{type:a,value:x}]},{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aW]},children:[{type:a,value:i},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:N},{type:b,tag:c,props:{className:[d,az]},children:[{type:a,value:bu}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:bV}]},{type:a,value:x}]},{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aW]},children:[{type:a,value:i},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:N},{type:b,tag:c,props:{className:[d,az]},children:[{type:a,value:bu}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:bV}]},{type:a,value:x}]},{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aW]},children:[{type:a,value:i},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:N},{type:b,tag:c,props:{className:[d,az]},children:[{type:a,value:cI}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:du}]},{type:a,value:x}]},{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aW]},children:[{type:a,value:" Static "}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aW]},children:[{type:a,value:" File System "}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aW]},children:[{type:a,value:i},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:N},{type:b,tag:c,props:{className:[d,az]},children:[{type:a,value:cl}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:cH}]},{type:a,value:x}]},{type:a,value:bh},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:N},{type:b,tag:c,props:{className:[d,az]},children:[{type:a,value:bu}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:bV}]},{type:a,value:x}]},{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aW]},children:[{type:a,value:i},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:N},{type:b,tag:c,props:{className:[d,az]},children:[{type:a,value:dw}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:dv}]},{type:a,value:x}]}]},{type:a,value:f}]}]}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I haven't done much to style it besides ensuring that it remains readable with overflow scrolling."}]},{type:a,value:f},{type:b,tag:S,props:{id:gn},children:[{type:b,tag:o,props:{href:"#nuxt-components",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:go}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Not native to Markdown, Nuxt has support for dropping in components, like this Media Card I made:"}]},{type:a,value:f},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aJ]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:gE}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:"item"}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]},{type:a,value:"\u002Fmedia\u002Fmovies\u002Fspider-man-no-way-home"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:gE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"There's nothing more to it than that. I just create and modify the Media Card component as part of my code, and if I change it then the changes will be automatically applied here too. I can drop in other components too, like a map:"}]},{type:a,value:f},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aJ]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:gF}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:"place"}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]},{type:a,value:"carlisle"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:gF}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"They could get a little verbose if I wanted to do something particularly complicated, but with drop-in components like these it's possible to add absolutely anything I want to a Markdown document."}]},{type:a,value:f},{type:b,tag:S,props:{id:gp},children:[{type:b,tag:o,props:{href:"#markdown-extensions",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:gq}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"There's at least one other Markdown extension active by default. That is checklists like this one:"}]},{type:a,value:f},{type:b,tag:as,props:{className:[aN]},children:[{type:a,value:f},{type:b,tag:z,props:{className:[aE]},children:[{type:b,tag:aF,props:{checked:ac,disabled:ac,type:aG},children:[]},{type:a,value:" One"}]},{type:a,value:f},{type:b,tag:z,props:{className:[aE]},children:[{type:b,tag:aF,props:{checked:ac,disabled:ac,type:aG},children:[]},{type:a,value:" Two"}]},{type:a,value:f},{type:b,tag:z,props:{className:[aE]},children:[{type:b,tag:aF,props:{disabled:ac,type:aG},children:[]},{type:a,value:" Three"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aJ]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,dx,e]},children:[{type:a,value:_}]},{type:a,value:" [x] One\n"},{type:b,tag:c,props:{className:[d,dx,e]},children:[{type:a,value:_}]},{type:a,value:" [x] Two\n"},{type:b,tag:c,props:{className:[d,dx,e]},children:[{type:a,value:_}]},{type:a,value:" [ ] Three\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"That can come in pretty useful."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"As well as this, I need to make note that Nuxt uses Remark under the hood which, along with Rehype, supports adding additional plugins. It's documented in Nuxt Content "},{type:b,tag:o,props:{href:"https:\u002F\u002Fcontent.nuxtjs.org\u002Fconfiguration#markdown",rel:[D,E,F],target:G},children:[{type:a,value:gx}]},{type:a,value:v}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"One plugin I am eager to install (so will do right now) is the "},{type:b,tag:o,props:{href:"https:\u002F\u002Fgithub.com\u002Fremarkjs\u002Fremark-math",rel:[D,E,F],target:G},children:[{type:a,value:"remark-math"}]},{type:a,value:" plugin. To install, it seems I need to "},{type:b,tag:h,props:{},children:[{type:a,value:"yarn add remark-math rehype-katex"}]},{type:a,value:" and then modify nuxt.config.js like so:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:c,props:{className:[br]},children:[{type:a,value:cg}]},{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"  content"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n    markdown"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n      remarkPlugins"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'remark-math'"}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n      rehypePlugins"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'rehype-katex'"}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"After which, I should be able to add inline math ($N$) as well as math blocks like this one:"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"$$\nN = R_* \\cdot f_\\mathrm{p} \\cdot n_\\mathrm{e} \\cdot f_\\mathrm{l} \\cdot f_\\mathrm{i} \\cdot f_\\mathrm{c} \\cdot L\n$$"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"How much use I'll get out of that, I don't know. I've considered getting back into mathematics a little bit, so we'll see."}]}]},dir:ah,path:"\u002Fblog\u002Fdoing-things-with-markdown",extension:ai,createdAt:O,updatedAt:O},{slug:"website-checklist",description:"My checklist for everything that ThomBruce.com needs or should have.",title:"Website Checklist",authors:[af],date:"2021-05-12T12:43:03.000Z",categories:[aR],series:[bs],tags:["Web Development",dj,aS,bu,gG,cI],toc:[],body:{type:ag,children:[{type:b,tag:as,props:{className:[aN]},children:[{type:a,value:f},{type:b,tag:z,props:{className:[aE]},children:[{type:b,tag:aF,props:{checked:ac,disabled:ac,type:aG},children:[]},{type:a,value:" Domain"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I purchased my domain, thombruce.com, from "},{type:b,tag:o,props:{href:"https:\u002F\u002Fwww.namecheap.com\u002F",rel:[D,E,F],target:G},children:[{type:a,value:ds}]},{type:a,value:v}]},{type:a,value:f},{type:b,tag:as,props:{className:[aN]},children:[{type:a,value:f},{type:b,tag:z,props:{className:[aE]},children:[{type:b,tag:aF,props:{checked:ac,disabled:ac,type:aG},children:[]},{type:a,value:" DNS"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The DNS at Namecheap wasn't stellar, so I hooked up my domain's DNS with "},{type:b,tag:o,props:{href:"https:\u002F\u002Fwww.cloudflare.com\u002F",rel:[D,E,F],target:G},children:[{type:a,value:dt}]},{type:a,value:v}]},{type:a,value:f},{type:b,tag:as,props:{className:[aN]},children:[{type:a,value:f},{type:b,tag:z,props:{className:[aE]},children:[{type:b,tag:aF,props:{checked:ac,disabled:ac,type:aG},children:[]},{type:a,value:" Basic Website"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:aS}]},{type:a,value:f},{type:b,tag:as,props:{className:[aN]},children:[{type:a,value:f},{type:b,tag:z,props:{className:[aE]},children:[{type:b,tag:aF,props:{checked:ac,disabled:ac,type:aG},children:[]},{type:a,value:" Source control"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"GitHub\u002FGitLab"}]},{type:a,value:f},{type:b,tag:as,props:{className:[aN]},children:[{type:a,value:f},{type:b,tag:z,props:{className:[aE]},children:[{type:b,tag:aF,props:{checked:ac,disabled:ac,type:aG},children:[]},{type:a,value:" Web hosting"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"ThomBruce.com is being hosted by Netlify."}]},{type:a,value:f},{type:b,tag:as,props:{className:[aN]},children:[{type:a,value:f},{type:b,tag:z,props:{className:[aE]},children:[{type:b,tag:aF,props:{disabled:ac,type:aG},children:[]},{type:a,value:" Continuous Delivery"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"At this time, we're using Netlify's 300 free build minutes, but Nuxt is kind of demanding so these get eaten up kind of fast. GitHub and Circle CI (for projects hosted on GitHub) offer unlimited build minutes for open source projects, buuuut... GitHub only allows 1GB of large file storage, after which I would have to consider a new CDN (see below)."}]},{type:a,value:f},{type:b,tag:as,props:{className:[aN]},children:[{type:a,value:f},{type:b,tag:z,props:{className:[aE]},children:[{type:b,tag:aF,props:{checked:ac,disabled:ac,type:aG},children:[]},{type:a,value:" Uptime Monitoring and Status Page"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Formerly, I've monitored my websites using "},{type:b,tag:o,props:{href:"https:\u002F\u002Fuptimerobot.com\u002F",rel:[D,E,F],target:G},children:[{type:a,value:gG}]},{type:a,value:". My new status page at "},{type:b,tag:o,props:{href:du,rel:[D,E,F],target:G},children:[{type:a,value:"status.thombruce.com"}]},{type:a,value:" uses "},{type:b,tag:o,props:{href:"https:\u002F\u002Fupptime.js.org\u002F",rel:[D,E,F],target:G},children:[{type:a,value:cI}]},{type:a,value:v}]},{type:a,value:f},{type:b,tag:as,props:{className:[aN]},children:[{type:a,value:f},{type:b,tag:z,props:{className:[aE]},children:[{type:b,tag:aF,props:{checked:ac,disabled:ac,type:aG},children:[]},{type:a,value:" Content"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Nuxt Content"}]},{type:a,value:f},{type:b,tag:as,props:{className:[aN]},children:[{type:a,value:f},{type:b,tag:z,props:{className:[aE]},children:[{type:b,tag:aF,props:{disabled:ac,type:aG},children:[]},{type:a,value:" Content Management System"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"At present I'm just using a code editor, Visual Studio Code, but I have plans to develop a separate CMS."}]},{type:a,value:f},{type:b,tag:as,props:{className:[aN]},children:[{type:a,value:f},{type:b,tag:z,props:{className:[aE]},children:[{type:b,tag:aF,props:{disabled:ac,type:aG},children:[]},{type:a,value:" Content Delivery Network (CDN)"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Currently, images are being stored directly in the repo with GitLab's generous 10GB of free LFS storage. They are mutated directly by the application and served by Netlify's CDN - Netlify provide 100GB bandwidth per month for free across all sites per account. But I am looking at moving to Cloudinary, which offers 25GB of storage or 25GB of viewing bandwidth or 25k transformations, or any combination of those adding up to 25 credits. I do not know if use of Nuxt Image would alleviate the demand on Cloudinary by storing resultant transformations locally on Netlify's CDN... but it is certainly something to look at. The best option is always to store only what is needed."}]},{type:a,value:f},{type:b,tag:as,props:{className:[aN]},children:[{type:a,value:f},{type:b,tag:z,props:{className:[aE]},children:[{type:b,tag:aF,props:{checked:ac,disabled:ac,type:aG},children:[]},{type:a,value:" Site Interactivity (Comments, etc.)"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I'd like to add some basic interactivity to ThomBruce.com. For this, I'm thinking of installing "},{type:b,tag:o,props:{href:dv,rel:[D,E,F],target:G},children:[{type:a,value:dw}]},{type:a,value:". Staticman would allow users to add comments; they'd take a minute to appear as live on the website because Staticman would send them to the static site generator, so this wouldn't do for a live chat or anything like that, but for comments, maybe a guestbook? It could work. That's comments covered by Staticman, but it leaves a bit to be desired and certain interactions will be impossible with that as the backend - this remains to be looked at further."}]}]},dir:ah,path:"\u002Fblog\u002Fwebsite-checklist",extension:ai,createdAt:O,updatedAt:O},{slug:"github-v-gitlab-lfs",description:"My choice of a Git remote.",title:"GitHub Vs. GitLab LFS",authors:[af],date:"2021-04-27T11:24:19.000Z",categories:[aR],series:[bs],tags:["GitHub",cl,"Git LFS"],toc:[],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:a,value:"At the time of writing, this website - despite my having written three blog posts already here - is not online. I've been writing content to roughly describe some thought processes as I develop the site itself, and now the next step is to take it online."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Before talking about hosting and serving the site to the public though (which I know I'll be using "},{type:b,tag:o,props:{href:"https:\u002F\u002Fwww.netlify.com\u002F",rel:[D,E,F],target:G},children:[{type:a,value:bu}]},{type:a,value:" to do), I need to decide on a place to store my source code... Actually, that's a lie. It isn't strictly necessary, but it is very good practice and I may write a post in the future about the benefits of Git or version control more broadly. Anyway, for my purposes right now I just want to decide on a place to store my source code, and my choices are GitHub or GitLab."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Before this morning, I actually thought I'd go with GitHub because I prefer the interface and it doesn't have the limitations that it used to which made me adopt GitLab in preference a long time ago. But... a static blog website isn't your typical coding project. My last article was about images, and they require some special consideration."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Images, you see, they tend to be binary file formats rather than text. This limits the benefits of version control, significantly; if a file changes, then the whole file changes rather than just a line or two. They're also large files, so this accumulates; the more large files we have, the more changes that are made to them, then the more junk data we're committing to version control. The most popular solution to this is "},{type:b,tag:o,props:{href:"https:\u002F\u002Fgit-lfs.github.com\u002F",rel:[D,E,F],target:G},children:[{type:a,value:"Git LFS (or Git Large File Storage)"}]},{type:a,value:". Git LFS, when installed and told which files to exclude, will not commit those files to version control, but will instead commit pointers to the files elsewhere - the files are stored and revised more typically then, in a manner better fitting large, binary files."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"What does this have to do with my choice between GitHub and GitLab? Well... GitHub are the owners and developers of Git LFS, but they have made it open source and it has largely been adopted as a standard by other Git storage providers. What matters to me, since I'm creating a blog that should just grow and grow with more and more images and other files being added, is storage capacity. By default GitHub allow 1GB of Git LFS storage, though I believe this can be increased with other paid plans. Over on GitLab, however, the storage limit is 10GB per repo. This is... ten times more, obviously."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Realistically, do I think I will hit this limit? ... Maybe eventually. The one image I do have stored currently is only around 222 kilobytes, one fifth of a megabyte, or one five-thousandth of a gigabyte, so I could store almost 50 thousand images with GitLab's LFS limit. So... do I think I will hit that limit? No time soon. But if I do upload more and different kinds of files, eventually, then perhaps we bump into that eventually and need to consider another solution."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The limiting factor, then, is bandwidth. Apparently, GitLab still have no strict limit on bandwidth usage but they do have some general discussion about "},{type:b,tag:o,props:{href:"https:\u002F\u002Fgitlab.com\u002Fgitlab-com\u002Fwww-gitlab-com\u002F-\u002Fissues\u002F1003#note_19874603",rel:[D,E,F],target:G},children:[{type:a,value:"acceptable use"}]},{type:a,value:"; obviously trying to use a free service to serve up the next Netflix would be unfair, and naturally draw quick attention from GitLab to be shut down."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Fortunately, I can prevent high bandwidth usage by caching... and I think this is something which Netlify (mentioned up top) support by default... "},{type:b,tag:q,props:{},children:[{type:a,value:"I tried to link to information here but all sources found were vague and inconclusive; the answer is roughly \"yes\" though."}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So that... I think that settles it. I'll be pushing this site to GitLab with Git LFS also hosted by GitLab, and I will be hosting it on Netlify very, very soon."}]}]},dir:ah,path:"\u002Fblog\u002Fgithub-v-gitlab-lfs",extension:ai,createdAt:O,updatedAt:O},{slug:"images-and-nuxt",description:"Adding image support to my Nuxt blog.",title:"Images and Nuxt",authors:[af],date:"2021-04-25T12:27:27.000Z",categories:[aR],series:[bs],tags:[cF,dp,bB],image:bD,toc:[{id:gH,depth:bQ,text:gI},{id:gJ,depth:bQ,text:gK}],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:a,value:"I don't believe that any decent blogging software would be complete without support for images. Markdown has this baked-in with syntax that looks a little like this: "},{type:b,tag:h,props:{},children:[{type:a,value:gL}]},{type:a,value:". Nuxt too could immediately support this syntax if I simply placed images into its "},{type:b,tag:h,props:{},children:[{type:a,value:"\u002Fstatic"}]},{type:a,value:" directory, but... this approach wouldn't support image processing by default. The images would be loaded at their native size, regardless of the context they're being displayed in - whether that be on a mobile phone or a large desktop screen. The result would be some unnecessarily large files being loaded for mobile, and little in the way of control of the image content elsewhere."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"One alternative is to use the HTML "},{type:b,tag:h,props:{},children:[{type:a,value:"\u003Cpicture\u003E"}]},{type:a,value:" tag, which has support for loading different sources for different screens. This gives us significantly more control, but would result in some pretty cumbersome tags in our markdown content. Plus, images would need to be processed manually and we might end up storing numerous versions of our image at different sizes. I would prefer to save just one image, from which different sizes could be generated automatically."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Fortunately, there's the relatively new plugin, "},{type:b,tag:o,props:{href:"https:\u002F\u002Fimage.nuxtjs.org\u002F",rel:[D,E,F],target:G},children:[{type:a,value:"Nuxt Image"}]},{type:a,value:". Nuxt Image adds image processing to Nuxt, so that I don't have to fret too much about manually handling those things."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I have to do a couple of things to add it to my project. First:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,J]},children:[{type:b,tag:h,props:{},children:[{type:a,value:"yarn add --dev @nuxt\u002Fimage\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"This adds the Nuxt Image plugin to my Nuxt website. But I also need to add it to my build modules, so that Nuxt acknowledges it as something I want to use when building my site from the source code. In "},{type:b,tag:h,props:{},children:[{type:a,value:cg}]},{type:a,value:", I add:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aa]},children:[{type:b,tag:h,props:{},children:[{type:a,value:di},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"'@nuxt\u002Fimage'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"With that done, I can now use Nuxt's "},{type:b,tag:h,props:{},children:[{type:a,value:"NuxtImg"}]},{type:a,value:aP},{type:b,tag:h,props:{},children:[{type:a,value:"NuxtPicture"}]},{type:a,value:" tags wherever I like, including in my Markdown content. And with that, I can control the sizes displayed across different devices. Take note of the "},{type:b,tag:h,props:{},children:[{type:a,value:cJ}]},{type:a,value:" attributes used below. Here, I've set it to the same value for sm, md and lg (small, medium and large screens), but these can be set individually so that different screens load different sizes. "},{type:b,tag:h,props:{},children:[{type:a,value:"50vw"}]},{type:a,value:aP},{type:b,tag:h,props:{},children:[{type:a,value:"25vw"}]},{type:a,value:" below mean \"50% of the view width\" and \"25% of the view width\" respectively, so Nuxt actually will create differently sized images for differently sized screens, even though the values are the same. "},{type:b,tag:h,props:{},children:[{type:a,value:gM}]},{type:a,value:" could have been "},{type:b,tag:h,props:{},children:[{type:a,value:"px"}]},{type:a,value:" instead, which would have meant these were explicit pixel values, rather than sizes relative to screen size."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"What all of this means is that I can now use the "},{type:b,tag:h,props:{},children:[{type:a,value:a_}]},{type:a,value:" tag to generate images at different sizes; not merely the same image displayed at different sizes, but separate images specifically generated for the size that they will appear."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Note: It is sort of poor practice to load the same image twice; if I want it twice, why not just load it once at the larger of the two values and artificially shrink the second version? The two examples below are included only for demonstration purposes."}]}]},{type:a,value:f},{type:b,tag:bT,props:{id:gH},children:[{type:b,tag:o,props:{href:"#an-image-at-50vw",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:gI}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aJ]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:a_}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:dy}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]},{type:a,value:bD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:cJ}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]},{type:a,value:cK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:a_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:gN}]},{type:a,value:f},{type:b,tag:a_,props:{src:bD,sizes:cK},children:[{type:a,value:f}]},{type:a,value:f},{type:b,tag:bT,props:{id:gJ},children:[{type:b,tag:o,props:{href:"#the-same-image-at-25vw",ariaHidden:Q,tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:gK}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aJ]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:a_}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:dy}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]},{type:a,value:bD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:cJ}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]},{type:a,value:gO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:a_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:gN}]},{type:a,value:f},{type:b,tag:a_,props:{src:bD,sizes:gO},children:[{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"As stated in the note above, it's a little redundant to load the same image twice here at two separate sizes. An alternative to loading the second image would be to do the following:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aJ]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:a_}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:dy}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]},{type:a,value:bD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:cJ}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]},{type:a,value:cK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bE]},children:[{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:bv}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]},{type:b,tag:c,props:{className:[d,bF,bp,bq]},children:[{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:"width"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,fW]},children:[{type:a,value:"25"}]},{type:b,tag:c,props:{className:[d,"unit"]},children:[{type:a,value:gM}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:a_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Instead of loading a separate, smaller version of the image, this would load the same version as the initial tag. The size as displayed is then controlled by CSS in the "},{type:b,tag:h,props:{},children:[{type:a,value:bv}]},{type:a,value:" attribute instead."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The result looks much the same:"}]},{type:a,value:f},{type:b,tag:a_,props:{src:bD,sizes:cK,style:"width:25vw;"},children:[{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"The aim of course is always to only load precisely what is needed, and no more."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"As a next step, I would really love to tap into the Markdown parser and override its image handling so that I could use "},{type:b,tag:h,props:{},children:[{type:a,value:gL}]},{type:a,value:" syntax and achieve the same result. I leave this, for now, as an exercise for the future."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Image attribution: Photo by "},{type:b,tag:o,props:{href:"https:\u002F\u002Funsplash.com\u002F@rirri01?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText"},children:[{type:a,value:"Rirri"}]},{type:a,value:" on "},{type:b,tag:o,props:{href:"https:\u002F\u002Funsplash.com\u002Fs\u002Fphotos\u002Fpolaroids?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText"},children:[{type:a,value:"Unsplash"}]}]}]}]},dir:ah,path:gw,extension:ai,createdAt:O,updatedAt:O},{slug:"anatomy-of-a-blog-post",description:"In which I consider the attributes required to sort and associate posts in my blog content files.",title:"Anatomy of a Blog Post",authors:[af],date:"2021-04-19T10:15:19.000Z",categories:[aR],series:[bs],tags:[cF,aS,bB],toc:[],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:a,value:"In my last entry, I talked about my decision to use Markdown to write my blog posts and briefly touched on my use of a Static Site Generator, "},{type:b,tag:o,props:{href:ch,rel:[D,E,F],target:G},children:[{type:a,value:aS}]},{type:a,value:". Nuxt is extraordinarily agnostic about what those Markdown files should look like, however. In fact, it supports numerous file formats as well as Markdown and doesn't really express much of a preference. It does, however, come with an example Markdown file with a structure a little like this:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:c,props:{className:[br]},children:[{type:a,value:"file-name.md"}]},{type:b,tag:m,props:{className:[aJ,n]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,gP]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aD}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,gQ,gR,gS]},children:[{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:dr}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" Title\n"},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:gT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:" 'A description of the content of the article.\nThis description can be multiline.'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aD}]}]},{type:a,value:"\n\nThe content of the Markdown article.\n\nAnother paragraph.\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"We might say this file has three attributes: the title, the description, and the content. In actuality, it has a few more; it's filename is another one (e.g. 'my-markdown-file.md'). For our immediate purposes though, let's just consider what we can see, those three in the example above."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So, all of these have some pretty clear utility, right? A title might be something that grabs the reader's attention or something we can sort alphabetically about, the description gives a further taste of what content to expect and... the content is the meat of the thing, that's what I want to write and ultimately to be read. But how do we order content by date? How might we show that another piece of content relates to this one?"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Okay, so we're maybe missing a date attribute and a set of tags or a category attribute - actually, I like to add both. Here are a few attributes I like to add nice and early:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[aJ,n]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,gP]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aD}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,gQ,gR,gS]},children:[{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:dr}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:gT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"createdAt"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"updatedAt"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"categories"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"series"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,L,K]},children:[{type:a,value:"tags"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aD}]}]},{type:a,value:"\n\nContent.\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"Where a "},{type:b,tag:h,props:{},children:[{type:a,value:"[]"}]},{type:a,value:" appears above, this denotes that the attribute may have multiple values."}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So, there's the title, description and content as seen in the default example. I've added createdAt and updatedAt, each a date field that we'll use to show when a piece of content was added and whether it has received an update; we can also use these to sort our articles by time. Then there are the categories, series and tags attributes. These three are collections of attributes; in practice, series in particular may only list one, but I like to leave it open to having multiple values. We call these taxonomies, and they list values that will enable us to show the association between two pieces of content. For example, if two separate pieces of content are in the 'Programming' category, they can be listed together on a category page, or they can be recommended as further reading in the footer of either article. Tags are a more broad set of keywords, and series might be used to associate articles in, well, a series - "},{type:b,tag:q,props:{},children:[{type:a,value:"this one follows this one"}]},{type:a,value:v}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"We don't have to stop there, and I will certainly revisit this in future as I consider whether review article types require a score parameter and other such considerations, but we will leave it there for now. One big missed consideration just now is an image. Even if my blog doesn't display images, it remains useful to have an image associated with an article so that it will be displayed when we share it on social media; that type of image is called an OpenGraph image, because it is written into the OpenGraph data which Facebook and other services use to understand the content being shared. I'll revisit that in a future article too, I think. But just for now, having the ability to at least sort my articles by creation time is enough."}]}]},dir:ah,path:"\u002Fblog\u002Fanatomy-of-a-blog-post",extension:ai,createdAt:O,updatedAt:O},{slug:"no-going-back",description:"On restarting my blog from scratch every few months, and not wanting to do that again.",title:gU,authors:[af],date:"2021-04-19T08:15:10.000Z",categories:[aR],series:[bs],tags:[cF,bB,aS],toc:[],body:{type:ag,children:[{type:b,tag:g,props:{},children:[{type:a,value:"Hi, and welcome to the one-thousand-three-hundred-and-thirty-seventh iteration of my blog. Okay, granted, that's a little bit of an exaggeration, but I really do have a "},{type:b,tag:q,props:{},children:[{type:a,value:"starting over"}]},{type:a,value:" problem. I keep on beginning new versions of my blog as I decide that I want to move to a new technology or I want to organise things a little differently. The first blog I actually wrote was a very long time ago; it was on MySpace, if you remember that website - a social platform from the "},{type:b,tag:q,props:{},children:[{type:a,value:"Before Facebook"}]},{type:a,value:" times. As I became more and more interested in making websites, I moved to WordPress, then I considered more sophisticated CMS platforms like Joomla. Eventually, I became a full-fledged web developer writing my own platforms in Ruby on Rails. Each step of this progression offered me more and more freedom and control; control to have my website behave a certain way, to do more technically difficult but really quite interesting things. And now... Now I've taken a few steps backwards."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"See, this blog post is being written in a plain text editor. Think... Microsoft Word, but if you couldn't add titles, bold text, italic, or any other formatting. It is a plain text document. That doesn't actually mean I can't do things like add titles and "},{type:b,tag:ay,props:{},children:[{type:a,value:cj}]},{type:a,value:bK},{type:b,tag:q,props:{},children:[{type:a,value:dz}]},{type:a,value:". I can, as you can probably see there, but they are being written as a form of markup in a Markdown document. As I see it presently, that previous sentence looks like this:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,aJ]},children:[{type:b,tag:h,props:{},children:[{type:a,value:gV},{type:b,tag:c,props:{className:[d,cj]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ck}]},{type:b,tag:c,props:{className:[d,az]},children:[{type:a,value:cj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ck}]}]},{type:a,value:bK},{type:b,tag:c,props:{className:[d,cG]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bC}]},{type:b,tag:c,props:{className:[d,az]},children:[{type:a,value:dz}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bC}]}]},{type:a,value:".\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Note the "},{type:b,tag:h,props:{},children:[{type:a,value:ck}]},{type:a,value:" enclosing tags to denote "},{type:b,tag:ay,props:{},children:[{type:a,value:"bold text"}]},{type:a,value:dg},{type:b,tag:h,props:{},children:[{type:a,value:bC}]},{type:a,value:" tags to denote "},{type:b,tag:q,props:{},children:[{type:a,value:cG}]},{type:a,value:". I like Markdown a lot; nothing is hiding. When you write for the web, the result is typically going to be HTML. That sentence above might render something like this in the end:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,bR]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:c}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:gV},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:ay}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:cj},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:ay}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:bK},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:dz},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:c}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"If you use a CMS like WordPress, or if you're writing a document in Microsoft Word, there is a certain magical step that gets hidden. You write rich text, you see the "},{type:b,tag:ay,props:{},children:[{type:a,value:"bolds"}]},{type:a,value:dg},{type:b,tag:q,props:{},children:[{type:a,value:"italics"}]},{type:a,value:", but how it renders to a website is hidden from you. As a developer, I like to know that I have total control. I can use HTML to add "},{type:b,tag:c,props:{style:"color:red;"},children:[{type:a,value:gW}]},{type:b,tag:c,props:{style:"color:orange;"},children:[{type:a,value:cL}]},{type:b,tag:c,props:{style:"color:yellow;"},children:[{type:a,value:gX}]},{type:b,tag:c,props:{style:"color:green;"},children:[{type:a,value:cL}]},{type:b,tag:c,props:{style:"color:blue;"},children:[{type:a,value:gY}]},{type:b,tag:c,props:{style:"color:violet;"},children:[{type:a,value:gZ}]},{type:a,value:", but HTML can be a little overly verbose as in the example above and... well, here's the HTML required to render those colours just now:"}]},{type:a,value:f},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,bR]},children:[{type:b,tag:h,props:{},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:c}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bE]},children:[{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:bv}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]},{type:b,tag:c,props:{className:[d,bF,bp,bq]},children:[{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:aO}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,aO]},children:[{type:a,value:"red"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:gW},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:c}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:c}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bE]},children:[{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:bv}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]},{type:b,tag:c,props:{className:[d,bF,bp,bq]},children:[{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:aO}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,aO]},children:[{type:a,value:"orange"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:cL},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:c}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:c}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bE]},children:[{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:bv}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]},{type:b,tag:c,props:{className:[d,bF,bp,bq]},children:[{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:aO}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,aO]},children:[{type:a,value:"yellow"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:gX},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:c}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:c}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bE]},children:[{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:bv}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]},{type:b,tag:c,props:{className:[d,bF,bp,bq]},children:[{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:aO}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,aO]},children:[{type:a,value:"green"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:cL},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:c}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:c}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bE]},children:[{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:bv}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]},{type:b,tag:c,props:{className:[d,bF,bp,bq]},children:[{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:aO}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,aO]},children:[{type:a,value:"blue"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:gY},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:c}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ak}]},{type:a,value:c}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,bE]},children:[{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:bv}]},{type:b,tag:c,props:{className:[d,am]},children:[{type:b,tag:c,props:{className:[d,e,an]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]},{type:b,tag:c,props:{className:[d,bF,bp,bq]},children:[{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:aO}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,aO]},children:[{type:a,value:"violet"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aj}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:at}]}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:gZ},{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,y]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ap}]},{type:a,value:c}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I prefer cleaner markup, not having to type out quite so much, but I like having that control. So Markdown is great for that. It is a superset of HTML, meaning I can include HTML (as I did to produce that colour effect), but for the most part I can write clean and simple, but still "},{type:b,tag:q,props:{},children:[{type:a,value:"dynamic"}]},{type:a,value:" text that remains easy to read."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"This is one of the reasons I today prefer things like Static Site Generators over the server-dependent systems like WordPress, Joomla and Ruby on Rails. Strictly, I could write Markdown in any of those systems too, but there are other benefits to Static Site Generators. They don't depend on a server, so the websites they produce are highly dependable. They skip the step where the server "},{type:b,tag:q,props:{},children:[{type:a,value:"figures out"}]},{type:a,value:" how to render the HTML; by the time a user is visiting a website produced by a Static Site Generator, the HTML is ready to deliver, so they're also blazing fast and much less fault-prone. But they can still do fancy, programmatic stuff like... for example, converting Markdown to HTML, they just do it earlier than at runtime. The trade-off, you see, is that publishing isn't quite instantaneous as it might be on a server-supported website. You could never have a chat app, for instance, that used an SSG to communicate chat messages, because every new message would mean having to build the HTML and republish the website again; it would be too slow. For something like a blog though, or for documentation or informational websites, this trade-off is worth it for the gains. So what if publishing a new page takes a minute instead of a microsecond, we've saved a lot more time for every visitor to the website, and a lot of energy in terms of rendering HTML on a server."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Static sites won't replace everything, obviously, but we can still integrate dynamic features into static pages. This is why I've chosen "},{type:b,tag:o,props:{href:ch,rel:[D,E,F],target:G},children:[{type:a,value:aS}]},{type:a,value:" as my generator of choice; it's a very flexible JavaScript framework for developing sophisticated applications... that just so happens to also have static site generation built in. So... "},{type:b,tag:q,props:{},children:[{type:a,value:"kind of"}]},{type:a,value:" best of both worlds. Still might need a server to facilitate certain things, but it's a strong foundational start."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"So, this is my new blog. And... who knows? Maybe in the future I will decide I need to move it elsewhere, but... I really want to try to remember this time, "},{type:b,tag:q,props:{},children:[{type:a,value:gU}]},{type:a,value:". If I move, I can take these blog posts, these markdown files with me. If I need to host the content on a server instead, I can write code that uploads them for me. Heck, I could have written scripts that exported from WordPress or Rails and gave me a zipped up folder of Markdown files, but my old blogs are lost to time now, I think. I've just got to not let that happen again."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"I don't know what you'll be seeing from me here, yet, but I will update as I go along and have anything worthwhile to say. Thanks for reading."}]}]},dir:ah,path:dq,extension:ai,createdAt:O,updatedAt:O}],_img:{"/_ipx/code.jpg?s=200_200":"\u002F_nuxt\u002Fimage\u002Fa0da87.jpg"}}],fetch:{},mutations:void 0}}("text","element","span","token","punctuation","\n","p","code"," ",":","div","nuxt-content-highlight","pre","line-numbers","a","operator","em","{","}","\n  ","string",".",",",")","tag","li","keyword","function","(","nofollow","noopener","noreferrer","_blank","property-access","module","language-text","atrule","key","\u003E","[","2021-09-08T00:51:02.507Z","method","true","|","h2","\n    ","=",-1,"icon","icon-link","maybe-class-name","]","-",2,"language-js","url",true,"import","'","Thom Bruce","root","\u002Fblog",".md",";","\u003C","attr-name","attr-value","attr-equals","\n      ","\u003C\u002F","TNT","Vue","ul","\"","\u002F","from","\n\n","comment","strong","content","property","regex-delimiter","\n          ","---","task-list-item","input","checkbox","imports","\n        ","language-md","use","important","](","contains-task-list","color"," and ","require","Jamstack","Nuxt.js","th","td","table-header","table-data","Journal","VueMeta","name","nuxt-img","My Process","NuxtJS","\u002F\u002F ...","w-full","md:w-1\u002F2","md:p-5","package.json","Vue.js",", ","parameter","constant","exports","regex","regex-source","language-regex","anchor","css","language-css","filename","Getting Started","[`One`, `Two`, `Three`]","Netlify","style","export","default","api","$","\n            ","Markdown","_","\u002Fcode.jpg","special-attr","value","boolean","Reworking TNT","Dynamite"," options"," or ","arrow","=\u003E","special-escape","escape","const",3,"language-html","data-theme","h3","script","https:\u002F\u002Fnetlify.com\u002F","nuxt-link","...","dist","nuxt","'vue-meta'","'@thombruce\u002Ftnt'","hr","end","main.js","ol","\n  plugins","tailwind.config.js","nuxt.config.js","https:\u002F\u002Fnuxtjs.org\u002F","this","bold","**","GitLab","language-json","almost","https:\u002F\u002Fgithub.com\u002Fthombruce\u002Ftnt","install","'vue'","https:\u002F\u002Fgithub.com\u002Fjaeming\u002Fvue-cli-plugin-pug","rule","\\.","vue","resolve","'pug-plain-loader'","src\u002Fmain.js","new","class-name",null," $","uses","run","\"baby's first website\"","Blogging","italic","https:\u002F\u002Fgitlab.com\u002F","Upptime","sizes","sm:50vw md:50vw lg:50vw","o","yarn install","control-flow","if","yarn upgrade @thombruce\u002Ftnt --latest","@thombruce\u002Ftnt","index.js"," file:","function-variable","\n\n    ","loader","postcss","plugins","Vue.use(TNT)","I think","false","src\u002Findex.js","\n        test","'@tailwindcss\u002Fforms'","yarn link","yarn serve","@tailwind","\u003Chtml\u003E"," and the ","Marmalade","buildModules","Hosting","with","what-is-the-jamstack","What is the Jamstack?","timepiece-analog","[{ label: `Data`, backgroundColor: [`#EF4444`, `#3B82F6`, `#10B981`], data: [40, 20, 12] }]","Images","\u002Fblog\u002Fno-going-back","title","Namecheap","Cloudflare","https:\u002F\u002Fstatus.thombruce.com\u002F","https:\u002F\u002Fstaticman.net\u002F","Staticman","list","src","italic text","Lerna","the-setup","The Setup","In ","\u002Fblog\u002Ftnt-monorepo","\"workspaces\"","\"packages\u002F*\"","packages\u002F","lerna.json","workspaces"," is ","useWorkspaces","build","\u002Ftnt","tnt\u002Fmain","reworking-tnt-vue-cli","my last entry","blockquote","This installs TNT, Tailwind, DaisyUI, Pug, Lodash, Luxon and Vue Meta. My next step is to flesh this thing out with those features I wanted to bring across from Nuxt in the first place. And that ends this short blog series.","\"scripts\"","\"build\"","!","options","initialising-the-plugin","Initialising the Plugin","install-dependencies","Install Dependencies","integration-logic","Integration Logic","reworking-tnt-vue-plugin-part-2","vue add tnt","https:\u002F\u002Fcli.vuejs.org\u002Fdev-guide\u002Fplugin-dev.html","https:\u002F\u002Fcli.vuejs.org\u002Fguide\u002Fplugins-and-presets.html#installing-plugins-in-an-existing-project",".gitignore","https:\u002F\u002Fgithub.com\u002Fthombruce\u002Fvue-cli-plugin-tnt","pug-plain-loader",".pug","https:\u002F\u002Fgithub.com\u002Fjaeming\u002Fvue-cli-plugin-pug\u002Fblob\u002Fmaster\u002Findex.js","method-variable","\n    webpackConfig","'pug'","pug","\n\n        ","oneOf","^","\\?","'pug-plain'","'raw-loader'","spread","configs","\n\n  api","generateConfig","quick-aside","Quick Aside","reworking-tnt-vue-plugin-part-1","src\u002FApp.vue","App","h","index.html","id","VueLoaderPlugin","\"vue-loader\"","\"path\"","\n            use","\n                  ","__dirname","\n  purge","\n    options","\n      safelist","\n    extend","'daisyui'","postcss.config.js","https:\u002F\u002Ftailwindcss.com\u002Fdocs\u002Fconfiguration#using-a-different-file-name","https:\u002F\u002Fgithub.com\u002Fpostcss\u002Fpostcss-load-config\u002Fissues\u002F55#issuecomment-266375307","vue add pug","reworking-tnt-vue-meta","https:\u002F\u002Fvuejs.org\u002Fv2\u002Fguide\u002Fplugins.html","reworking-tnt-without-nuxt","public\u002Findex.html"," and...","language-javascript","creating-dynamite","Creating Dynamite","NuxtLink","\u003CNuxt \u002F\u003E","https:\u002F\u002Ftailwindcss.com\u002Fdocs\u002Fguides\u002Fvue-3-vite","html","https:\u002F\u002Ftailwindcss.com\u002Fdocs\u002Finstallation#post-css-7-compatibility-build","the-philosophy","The Philosophy","the-application","The Application","in-summary","In Summary","Hosted","Dynamite CMS","tnt","my-static-websites","My Static Websites","journal-know-it-all-and-review","Journal, Know It All and Review","connected-events-in-static-deployment","Connected Events in Static Deployment","hosted-marmalade-and-dynamite-cms","Hosted, Marmalade and Dynamite CMS","returning-to-ruby-playing-nicely-with-nuxt","Returning to Ruby: Playing Nicely with Nuxt","project-dashboard","Project \"Dashboard\"","the-future-refining-my-computer-science-skills-and-knowledge","The Future: Refining My Computer Science Skills and Knowledge","Thom's Nuxt Template","https:\u002F\u002Fthombruce.com\u002F","thombruce.com","https:\u002F\u002Fink.thombruce.com\u002F","https:\u002F\u002Fdocs.github.com\u002Fen\u002Factions\u002Freference\u002Fevents-that-trigger-workflows#webhook-events","creating-the-project","Creating the Project","style-and-structure","Style and Structure","adding-my-content","Adding My Content","ready-for-launch","Ready for Launch!","wrapping-up","Wrapping Up","):","'@thombruce\u002Fnuxt-tnt'","_page","push","number","assets","what-is-a-jameater","What is a Jameater?","why-write-this","Why Write This?","yarn init","nuxt\u002Findex.js","\n\n  ","Bar","bar-chart","[{ label: `Data`, borderWidth: 0, backgroundColor: [`#EF4444`, `#3B82F6`, `#10B981`], data: [40, 20, 12] }]","typography","Typography","inline-code--code-blocks","Inline Code & Code Blocks","images","tables","Tables","nuxt-components","Nuxt Components","markdown-extensions","Markdown Extensions","elsewhere"," what ","is","isn't"," possible in ","\u002Fblog\u002Fimages-and-nuxt","here","table","tr","https:\u002F\u002Fnamecheap.com\u002F","https:\u002F\u002Fcloudflare.com\u002F","https:\u002F\u002Fvuetifyjs.com\u002F","Vuetify","media-card","map-view","UptimeRobot","an-image-at-50vw","An image at 50vw","the-same-image-at-25vw","The same image at 25vw","![](\u002Fpath-to-image.jpg)","vw","How it looks:","sm:25vw md:25vw lg:25vw","front-matter-block","font-matter","yaml","language-yaml","description","No Going Back","That doesn't actually mean I can't do things like add titles and ","c","l","u","r")));